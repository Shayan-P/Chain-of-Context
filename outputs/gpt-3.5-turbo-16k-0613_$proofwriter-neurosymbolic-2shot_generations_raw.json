[["TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\tall x. (Sees(Bear, Dog) & Eats(Dog, Tiger) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. (Eats(x, Bear) & Sees(Bear, Rabbit) -> Sees(x, Dog))\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\n"], ["TEXT: Erin is nice.\nFOL: Nice(Erin)\n\nTEXT: Erin is white.\nFOL: White(Erin)\n\nTEXT: Fiona is quiet.\nFOL: Quiet(Fiona)\n\nTEXT: Gary is white.\nFOL: White(Gary)\n\nTEXT: Harry is cold.\nFOL: Cold(Harry)\n\nTEXT: Harry is green.\nFOL: Green(Harry)\n\nTEXT: Harry is nice.\nFOL: Nice(Harry)\n\nTEXT: Harry is quiet.\nFOL: Quiet(Harry)\n\nTEXT: Harry is round.\nFOL: Round(Harry)\n\nTEXT: Harry is white.\nFOL: White(Harry)\n\nTEXT: All quiet people are round.\nFOL: all x. (Quiet(x) -> Round(x))\n\nTEXT: If someone is quiet then they are round.\nFOL: all x. (Quiet(x) -> Round(x))\n\nTEXT: If Erin is round then Erin is green.\nFOL: (Round(Erin) -> Green(Erin))\n\nTEXT: Nice people are cold.\nFOL: all x. (Nice(x) -> Cold(x))\n\nTEXT: If someone is quiet and nice then they are cold.\nFOL: all x. (Quiet(x) & Nice(x) -> Cold(x))\n\nTEXT: If someone is round then they are nice.\nFOL: all x. (Round(x) -> Nice(x))\n\nTEXT: If someone is cold then they are quiet.\nFOL: all x. (Cold(x) -> Quiet(x))\n\nTEXT: If Gary is quiet then Gary is not white.\nFOL: (Quiet(Gary) -> -White(Gary))\n\nTEXT: If someone is nice and green then they are smart.\nFOL: all x. all y. (Nice(x) & Green(x) -> Smart(x))\n\nTEXT: Fiona is not cold.\nFOL: -Cold(Fiona)\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. (Cold(x) & Rough(x) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\tFurry(Fiona) -> Kind(Fiona)\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. (Rough(x) & Kind(x) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. (Blue(x) & Nice(x) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\tall x. (Smart(x) & Cold(x) -> Furry(x))\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. (Red(x) & Quiet(x) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\n"], ["TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. (White(x) & Young(x) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. (Green(x) & Furry(x) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\n"], ["TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Needs(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chases(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. (Eats(x, Bear) & -Needs(x, BaldEagle) -> Chases(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. (Chases(x, Mouse) & Red(Mouse) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. (Round(x) & Needs(x, Tiger) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Needs(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. (Needs(x, BaldEagle) & Eats(BaldEagle, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. (Round(x) & -Eats(x, Mouse) -> -Needs(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chases(Mouse, Bear)\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t- Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. (White(x) & Green(x) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\tRough(Anne) -> Green(Anne)\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. (Green(x) & Smart(x) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. (Quiet(x) & Rough(x) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\n"], ["TEXT:\tThe dog eats the tiger.\nFOL:\tEats(dog, tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(dog, lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(lion, mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(lion, tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(mouse, tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(tiger, lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(tiger, mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(tiger, dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(tiger, lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, mouse) -> Visits(x, lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, lion) -> Visits(x, mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, tiger) -> Eats(tiger, mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. ((Eats(x, mouse) & Blue(x)) -> Visits(x, tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. ((Eats(x, mouse) & Round(mouse)) -> Eats(x, lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. (Visits(x, tiger) & Visits(tiger, mouse) -> Visits(x, dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. (Round(x) & Needs(x, lion) -> Red(lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, lion) -> Visits(lion, mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, dog) -> Needs(x, lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(mouse, lion)\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. (Big(x) & Furry(x) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. all y. (Smart(x) & Rough(y) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. (Smart(x) & Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. (Furry(x) & -Rough(x) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. (Rough(x) & Furry(x) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\n"], ["TEXT:\tThe bear does not chase the cat.\nFOL:\t-(Chase(Bear, Cat))\nTEXT:\tThe bear eats the cat.\nFOL:\tEat(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEat(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSee(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSee(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEat(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. (Kind(x) & See(x, Dog) -> Chase(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. (Eat(x, Bear) & Chase(Bear, Dog) -> Eat(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (See(x, Bear) -> See(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. (See(x, Cat) & See(Cat, Bear) -> Eat(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. (Nice(x) & Eat(x, Cow) -> -Chase(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (See(x, Cow) -> See(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> See(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eat(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\tall x. (Big(x) -> Kind(x))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. (Kind(x) & Young(x) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. (Kind(x) & Green(x) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. (Young(x) & Round(x) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\tall x. (Young(x) & Cold(x) -> Green(x))\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. (Young(x) & Green(x) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\n"], ["TEXT: Dave is red.\nFOL: Red(Dave)\nTEXT: Fiona is cold.\nFOL: Cold(Fiona)\nTEXT: Fiona is red.\nFOL: Red(Fiona)\nTEXT: Fiona is round.\nFOL: Round(Fiona)\nTEXT: Fiona is white.\nFOL: White(Fiona)\nTEXT: Gary is cold.\nFOL: Cold(Gary)\nTEXT: Gary is nice.\nFOL: Nice(Gary)\nTEXT: Gary is red.\nFOL: Red(Gary)\nTEXT: Harry is cold.\nFOL: Cold(Harry)\nTEXT: Harry is nice.\nFOL: Nice(Harry)\nTEXT: Harry is red.\nFOL: Red(Harry)\nTEXT: Harry is round.\nFOL: Round(Harry)\nTEXT: Harry is white.\nFOL: White(Harry)\nTEXT: Harry is young.\nFOL: Young(Harry)\nTEXT: If Harry is young then Harry is red.\nFOL: all x. (Young(x) -> Red(x))\nTEXT: If something is young then it is smart.\nFOL: all x. (Young(x) -> Smart(x))\nTEXT: Cold, young things are round.\nFOL: all x. (Cold(x) & Young(x) -> Round(x))\nTEXT: All white things are cold.\nFOL: all x. (White(x) -> Cold(x))\nTEXT: Smart things are young.\nFOL: all x. (Smart(x) -> Young(x))\nTEXT: Smart things are white.\nFOL: all x. (Smart(x) -> White(x))\nTEXT: If something is red then it is young.\nFOL: all x. (Red(x) -> Young(x))\nTEXT: All smart things are nice.\nFOL: all x. (Smart(x) -> Nice(x))\nTEXT: Gary is smart.\nFOL: Smart(Gary)"], ["TEXT:\tThe dog chases the rabbit.\nFOL:\tChase(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSee(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChase(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSee(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSee(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t-Visit(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChase(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChase(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChase(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisit(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visit(x, Lion) -> -Round(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visit(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. (See(x, Tiger) & -Visit(Tiger, Rabbit) -> -Nice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visit(x, Dog) -> -Cold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> -Chase(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visit(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (See(x, Lion) -> Visit(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chase(x, Rabbit) -> Chase(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisit(Lion, Lion)\n"], ["TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (Sees(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eats(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. (Sees(x, Bear) & Chases(x, Dog) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Dog) & Eats(Dog, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chases(x, Bear) -> Eats(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\n"], ["TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. (Blue(x) & Nice(x) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\tall x. (Round(x) & Rough(x) -> Young(x))\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. (Nice(x) & White(x) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. (Rough(x) & Blue(x) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\tall x. (Red(x) -> Blue(x))\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t((Nice(Charlie) & Big(Charlie)) -> Blue(Charlie))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\n"], ["TEXT: The bear is nice.\nFOL: Nice(bear)\n\nTEXT: The bear visits the tiger.\nFOL: Visits(bear, tiger)\n\nTEXT: The cat is cold.\nFOL: Cold(cat)\n\nTEXT: The cat does not need the tiger.\nFOL: -Needs(cat, tiger)\n\nTEXT: The cat sees the mouse.\nFOL: Sees(cat, mouse)\n\nTEXT: The cat visits the bear.\nFOL: Visits(cat, bear)\n\nTEXT: The mouse needs the bear.\nFOL: Needs(mouse, bear)\n\nTEXT: The mouse sees the cat.\nFOL: Sees(mouse, cat)\n\nTEXT: The mouse visits the bear.\nFOL: Visits(mouse, bear)\n\nTEXT: The tiger is not rough.\nFOL: -Rough(tiger)\n\nTEXT: The tiger does not need the mouse.\nFOL: -Needs(tiger, mouse)\n\nTEXT: If someone is rough then they are cold.\nFOL: all x. (Rough(x) -> Cold(x))\n\nTEXT: If someone needs the bear then they need the mouse.\nFOL: all x. (Needs(x, bear) -> Needs(x, mouse))\n\nTEXT: If someone is kind then they need the mouse.\nFOL: all x. (Kind(x) -> Needs(x, mouse))\n\nTEXT: If someone sees the bear then they are rough.\nFOL: all x. (Sees(x, bear) -> Rough(x))\n\nTEXT: If someone visits the mouse then they see the bear.\nFOL: all x. (Visits(x, mouse) -> Sees(x, bear))\n\nTEXT: If someone is kind then they visit the mouse.\nFOL: all x. (Kind(x) -> Visits(x, mouse))\n\nTEXT: If someone needs the bear then they are kind.\nFOL: all x. (Needs(x, bear) -> Kind(x))\n\nTEXT: If someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL: all x. (Sees(x, bear) & -Visits(bear, cat) -> -Needs(bear, mouse))\n\nTEXT: If someone visits the cat then the cat visits the bear.\nFOL: all x. (Visits(x, cat) -> Visits(cat, bear))\n\nTEXT: The mouse sees the bear.\nFOL: Sees(mouse, bear)\n"], ["TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chases(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. (Chases(x, BaldEagle) & Big(x) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. (Chases(x, Cow) & Round(x) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\tall x. (Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. (Big(x) & Needs(x, BaldEagle) -> Chases(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\tall x. (Needs(x, Cow) & Chases(Cow, Squirrel) -> -Likes(Squirrel, Cow))\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\n"], ["TEXT: The bald eagle chases the lion.\nFOL: Chases(bald_eagle, lion)\n\nTEXT: The bald eagle is not green.\nFOL: -Green(bald_eagle)\n\nTEXT: The bald eagle is round.\nFOL: Round(bald_eagle)\n\nTEXT: The bald eagle likes the lion.\nFOL: Likes(bald_eagle, lion)\n\nTEXT: The dog is red.\nFOL: Red(dog)\n\nTEXT: The lion does not chase the dog.\nFOL: -Chases(lion, dog)\n\nTEXT: The lion is round.\nFOL: Round(lion)\n\nTEXT: The lion is not young.\nFOL: -Young(lion)\n\nTEXT: The rabbit chases the dog.\nFOL: Chases(rabbit, dog)\n\nTEXT: The rabbit eats the lion.\nFOL: Eats(rabbit, lion)\n\nTEXT: If something chases the dog then it likes the rabbit.\nFOL: all x. (Chases(x, dog) -> Likes(x, rabbit))\n\nTEXT: If something is red and it chases the lion then the lion likes the bald eagle.\nFOL: all x. (Red(x) & Chases(x, lion) -> Likes(lion, bald_eagle))\n\nTEXT: If something is big then it chases the rabbit.\nFOL: all x. (Big(x) -> Chases(x, rabbit))\n\nTEXT: If something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL: all x. (Round(x) & Chases(x, bald_eagle) -> -Likes(bald_eagle, dog))\n\nTEXT: If something likes the lion then it is red.\nFOL: all x. (Likes(x, lion) -> Red(x))\n\nTEXT: If something is red and round then it does not chase the bald eagle.\nFOL: all x. (Red(x) & Round(x) -> -Chases(x, bald_eagle))\n\nTEXT: If something is red and young then it chases the bald eagle.\nFOL: all x. (Red(x) & Young(x) -> Chases(x, bald_eagle))\n\nTEXT: If something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL: all x. (Likes(x, bald_eagle) & Chases(bald_eagle, lion) -> Likes(x, lion))\n\nTEXT: If something eats the bald eagle then the bald eagle is red.\nFOL: all x. (Eats(x, bald_eagle) -> Red(bald_eagle))\n\nTEXT: The bald eagle does not chase the bald eagle.\nFOL: -Chases(bald_eagle, bald_eagle)\n"], ["TEXT: Bob is big.\nFOL: Big(Bob)\n\nTEXT: Charlie is green.\nFOL: Green(Charlie)\n\nTEXT: Erin is furry.\nFOL: Furry(Erin)\n\nTEXT: Erin is green.\nFOL: Green(Erin)\n\nTEXT: Erin is nice.\nFOL: Nice(Erin)\n\nTEXT: Harry is big.\nFOL: Big(Harry)\n\nTEXT: Harry is young.\nFOL: Young(Harry)\n\nTEXT: All green things are quiet.\nFOL: all x. (Green(x) -> Quiet(x))\n\nTEXT: All red things are big.\nFOL: all x. (Red(x) -> Big(x))\n\nTEXT: If something is red then it is green.\nFOL: all x. (Red(x) -> Green(x))\n\nTEXT: If Charlie is quiet then Charlie is furry.\nFOL: all x. (Quiet(x) -> Furry(x))\n\nTEXT: All quiet, red things are young.\nFOL: all x. (Quiet(x) & Red(x) -> Young(x))\n\nTEXT: If something is young then it is nice.\nFOL: all x. (Young(x) -> Nice(x))\n\nTEXT: If Bob is big and Bob is young then Bob is furry.\nFOL: all x. (Big(x) & Young(x) -> Furry(x))\n\nTEXT: Furry things are red.\nFOL: all x. (Furry(x) -> Red(x))\n\nTEXT: Bob is quiet.\nFOL: Quiet(Bob)\n"]]