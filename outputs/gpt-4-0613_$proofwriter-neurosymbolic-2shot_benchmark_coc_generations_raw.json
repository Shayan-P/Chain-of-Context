[["TEXT:\tThe bear eats the dog.\nFOL:\tEats(Bear, Dog)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear needs the rabbit.\nFOL:\tNeeds(Bear, Rabbit)\nTEXT:\tThe bear needs the tiger.\nFOL:\tNeeds(Bear, Tiger)\nTEXT:\tThe bear sees the rabbit.\nFOL:\tSees(Bear, Rabbit)\nTEXT:\tThe dog eats the bear.\nFOL:\tEats(Dog, Bear)\nTEXT:\tThe rabbit eats the tiger.\nFOL:\tEats(Rabbit, Tiger)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tThe tiger is cold.\nFOL:\tCold(Tiger)\nTEXT:\tThe tiger is young.\nFOL:\tYoung(Tiger)\nTEXT:\tIf something eats the tiger then the tiger needs the dog.\nFOL:\tall x. (Eats(x, Tiger) -> Needs(Tiger, Dog))\nTEXT:\tIf the bear sees the dog and the dog eats the tiger then the dog eats the bear.\nFOL:\t(Sees(Bear, Dog) & Eats(Dog, Tiger)) -> Eats(Dog, Bear)\nTEXT:\tIf something eats the bear then it sees the tiger.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Tiger))\nTEXT:\tIf the tiger sees the rabbit then the rabbit eats the bear.\nFOL:\tSees(Tiger, Rabbit) -> Eats(Rabbit, Bear)\nTEXT:\tIf something eats the bear and the bear sees the rabbit then it sees the dog.\nFOL:\tall x. ((Eats(x, Bear) & Sees(Bear, Rabbit)) -> Sees(x, Dog))\nTEXT:\tIf something sees the dog then it sees the rabbit.\nFOL:\tall x. (Sees(x, Dog) -> Sees(x, Rabbit))\nTEXT:\tThe tiger eats the dog.\nFOL:\tEats(Tiger, Dog)\n"], ["TEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll quiet people are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf someone is quiet then they are round.\nFOL:\tall x. (Quiet(x) -> Round(x))\nTEXT:\tIf Erin is round then Erin is green.\nFOL:\t(Round(Erin) -> Green(Erin))\nTEXT:\tNice people are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone is quiet and nice then they are cold.\nFOL:\tall x. (Quiet(x) & Nice(x) -> Cold(x))\nTEXT:\tIf someone is round then they are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone is cold then they are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf Gary is quiet then Gary is not white.\nFOL:\t(Quiet(Gary) -> -White(Gary))\nTEXT:\tIf someone is nice and green then they are smart.\nFOL:\tall x. (Nice(x) & Green(x) -> Smart(x))\nTEXT:\tFiona is not cold.\nFOL:\t-Cold(Fiona)\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is nice.\nFOL:\tNice(Charlie)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tRed things are nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tAll nice things are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tFurry things are kind.\nFOL:\tall x. (Furry(x) -> Kind(x))\nTEXT:\tIf something is cold and rough then it is white.\nFOL:\tall x. ((Cold(x) & Rough(x)) -> White(x))\nTEXT:\tIf Fiona is furry then Fiona is kind.\nFOL:\t(Furry(Fiona) -> Kind(Fiona))\nTEXT:\tRough, kind things are furry.\nFOL:\tall x. ((Rough(x) & Kind(x)) -> Furry(x))\nTEXT:\tWhite things are kind.\nFOL:\tall x. (White(x) -> Kind(x))\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tAll blue things are red.\nFOL:\tall x. (Blue(x) -> Red(x))\nTEXT:\tBlue, nice things are quiet.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> Quiet(x))\nTEXT:\tIf Harry is quiet then Harry is furry.\nFOL:\t(Quiet(Harry) -> Furry(Harry))\nTEXT:\tIf Charlie is smart and Charlie is cold then Charlie is furry.\nFOL:\t((Smart(Charlie) & Cold(Charlie)) -> Furry(Charlie))\nTEXT:\tIf something is furry then it is nice.\nFOL:\tall x. (Furry(x) -> Nice(x))\nTEXT:\tRed, quiet things are smart.\nFOL:\tall x. ((Red(x) & Quiet(x)) -> Smart(x))\nTEXT:\tNice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tQuiet things are blue.\nFOL:\tall x. (Quiet(x) -> Blue(x))\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\n"], ["TEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is kind.\nFOL:\tKind(Dave)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf something is young then it is round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tAll white things are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tIf something is white and young then it is big.\nFOL:\tall x. ((White(x) & Young(x)) -> Big(x))\nTEXT:\tGreen, furry things are white.\nFOL:\tall x. ((Green(x) & Furry(x)) -> White(x))\nTEXT:\tIf something is furry then it is green.\nFOL:\tall x. (Furry(x) -> Green(x))\nTEXT:\tAll big things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tFiona is not young.\nFOL:\t-Young(Fiona)\n"], ["TEXT:\tThe bald eagle does not need the mouse.\nFOL:\t-Needs(BaldEagle, Mouse)\nTEXT:\tThe bear does not eat the bald eagle.\nFOL:\t-Eats(Bear, BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe mouse chases the bald eagle.\nFOL:\tChases(Mouse, BaldEagle)\nTEXT:\tThe mouse eats the bear.\nFOL:\tEats(Mouse, Bear)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger eats the bear.\nFOL:\tEats(Tiger, Bear)\nTEXT:\tIf something is round then it chases the bear.\nFOL:\tall x. (Round(x) -> Chases(x, Bear))\nTEXT:\tIf something eats the bear and it does not need the bald eagle then it chases the bear.\nFOL:\tall x. ((Eats(x, Bear) & -Needs(x, BaldEagle)) -> Chases(x, Bear))\nTEXT:\tIf something chases the bear then it needs the tiger.\nFOL:\tall x. (Chases(x, Bear) -> Needs(x, Tiger))\nTEXT:\tIf something chases the mouse and the mouse is red then it does not eat the bald eagle.\nFOL:\tall x. ((Chases(x, Mouse) & Red(Mouse)) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is red then it does not eat the bald eagle.\nFOL:\tall x. (Red(x) -> -Eats(x, BaldEagle))\nTEXT:\tIf something is round and it needs the tiger then the tiger is round.\nFOL:\tall x. ((Round(x) & Needs(x, Tiger)) -> Round(Tiger))\nTEXT:\tIf something needs the bald eagle then it is not red.\nFOL:\tall x. (Needs(x, BaldEagle) -> -Red(x))\nTEXT:\tIf something needs the bald eagle and the bald eagle eats the tiger then the tiger eats the mouse.\nFOL:\tall x. ((Needs(x, BaldEagle) & Eats(BaldEagle, Tiger)) -> Eats(Tiger, Mouse))\nTEXT:\tIf something is round and it does not eat the mouse then it does not need the mouse.\nFOL:\tall x. ((Round(x) & -Eats(x, Mouse)) -> -Needs(x, Mouse))\nTEXT:\tThe mouse does not chase the bear.\nFOL:\t-Chases(Mouse, Bear)\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is not nice.\nFOL:\t-Nice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tIf something is nice then it is rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tIf something is green then it is rough.\nFOL:\tall x. (Green(x) -> Rough(x))\nTEXT:\tIf something is white and green then it is smart.\nFOL:\tall x. (White(x) & Green(x) -> Smart(x))\nTEXT:\tIf Anne is rough then Anne is green.\nFOL:\tRough(Anne) -> Green(Anne)\nTEXT:\tIf something is big then it is quiet.\nFOL:\tall x. (Big(x) -> Quiet(x))\nTEXT:\tIf something is nice and white then it is quiet.\nFOL:\tall x. (Nice(x) & White(x) -> Quiet(x))\nTEXT:\tIf something is green and smart then it is big.\nFOL:\tall x. (Green(x) & Smart(x) -> Big(x))\nTEXT:\tIf something is quiet and rough then it is white.\nFOL:\tall x. (Quiet(x) & Rough(x) -> White(x))\nTEXT:\tAnne is green.\nFOL:\tGreen(Anne)\n"], ["TEXT:\tThe dog eats the tiger.\nFOL:\tEats(Dog, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog visits the lion.\nFOL:\tVisits(Dog, Lion)\nTEXT:\tThe lion eats the mouse.\nFOL:\tEats(Lion, Mouse)\nTEXT:\tThe lion is rough.\nFOL:\tRough(Lion)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion visits the tiger.\nFOL:\tVisits(Lion, Tiger)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe tiger eats the lion.\nFOL:\tEats(Tiger, Lion)\nTEXT:\tThe tiger needs the mouse.\nFOL:\tNeeds(Tiger, Mouse)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tThe tiger visits the lion.\nFOL:\tVisits(Tiger, Lion)\nTEXT:\tIf someone visits the mouse then they visit the lion.\nFOL:\tall x. (Visits(x, Mouse) -> Visits(x, Lion))\nTEXT:\tIf someone needs the lion then they visit the mouse.\nFOL:\tall x. (Needs(x, Lion) -> Visits(x, Mouse))\nTEXT:\tIf someone visits the tiger then the tiger eats the mouse.\nFOL:\tall x. (Visits(x, Tiger) -> Eats(Tiger, Mouse))\nTEXT:\tIf someone eats the mouse and they are blue then they visit the tiger.\nFOL:\tall x. ((Eats(x, Mouse) & Blue(x)) -> Visits(x, Tiger))\nTEXT:\tIf someone eats the mouse and the mouse is round then they eat the lion.\nFOL:\tall x. ((Eats(x, Mouse) & Round(Mouse)) -> Eats(x, Lion))\nTEXT:\tIf someone visits the tiger and the tiger visits the mouse then they visit the dog.\nFOL:\tall x. ((Visits(x, Tiger) & Visits(Tiger, Mouse)) -> Visits(x, Dog))\nTEXT:\tIf someone is round and they need the lion then the lion is red.\nFOL:\tall x. ((Round(x) & Needs(x, Lion)) -> Red(Lion))\nTEXT:\tIf someone visits the lion then the lion visits the mouse.\nFOL:\tall x. (Visits(x, Lion) -> Visits(Lion, Mouse))\nTEXT:\tIf someone visits the dog then they need the lion.\nFOL:\tall x. (Visits(x, Dog) -> Needs(x, Lion))\nTEXT:\tThe mouse does not need the lion.\nFOL:\t-Needs(Mouse, Lion)\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\nTEXT:\tIf Bob is rough then Bob is furry.\nFOL:\tRough(Bob) -> Furry(Bob)\nTEXT:\tIf someone is white then they are young.\nFOL:\tall x. (White(x) -> Young(x))\nTEXT:\tAll big, furry people are not smart.\nFOL:\tall x. ((Big(x) & Furry(x)) -> -Smart(x))\nTEXT:\tIf someone is smart and rough then they are big.\nFOL:\tall x. ((Smart(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young then they are big.\nFOL:\tall x. (Young(x) -> Big(x))\nTEXT:\tIf someone is rough then they are furry.\nFOL:\tall x. (Rough(x) -> Furry(x))\nTEXT:\tAll smart, young people are furry.\nFOL:\tall x. ((Smart(x) & Young(x)) -> Furry(x))\nTEXT:\tIf someone is furry and not rough then they are kind.\nFOL:\tall x. ((Furry(x) & -Rough(x)) -> Kind(x))\nTEXT:\tIf someone is rough and furry then they are white.\nFOL:\tall x. ((Rough(x) & Furry(x)) -> White(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\n"], ["TEXT:\tThe bear does not chase the cat.\nFOL:\t-Chase(Bear, Cat)\nTEXT:\tThe bear eats the cat.\nFOL:\tEats(Bear, Cat)\nTEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear is green.\nFOL:\tGreen(Bear)\nTEXT:\tThe bear is not nice.\nFOL:\t-Nice(Bear)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cat is nice.\nFOL:\tNice(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the bear.\nFOL:\tSees(Cat, Bear)\nTEXT:\tThe cow eats the dog.\nFOL:\tEats(Cow, Dog)\nTEXT:\tThe dog is kind.\nFOL:\tKind(Dog)\nTEXT:\tIf someone is kind and they see the dog then the dog chases the cow.\nFOL:\tall x. (Kind(x) & Sees(x, Dog) -> Chase(Dog, Cow))\nTEXT:\tIf someone eats the bear and the bear chases the dog then the dog eats the cow.\nFOL:\tall x. (Eats(x, Bear) & Chase(Bear, Dog) -> Eats(Dog, Cow))\nTEXT:\tIf someone sees the bear then they see the cow.\nFOL:\tall x. (Sees(x, Bear) -> Sees(x, Cow))\nTEXT:\tIf someone sees the cat and the cat sees the bear then they eat the dog.\nFOL:\tall x. (Sees(x, Cat) & Sees(Cat, Bear) -> Eats(x, Dog))\nTEXT:\tIf someone is nice and they eat the cow then the cow does not chase the cat.\nFOL:\tall x. (Nice(x) & Eats(x, Cow) -> -Chase(Cow, Cat))\nTEXT:\tIf someone sees the cow then they see the cat.\nFOL:\tall x. (Sees(x, Cow) -> Sees(x, Cat))\nTEXT:\tIf someone is green then they see the bear.\nFOL:\tall x. (Green(x) -> Sees(x, Bear))\nTEXT:\tIf someone eats the dog then they are red.\nFOL:\tall x. (Eats(x, Dog) -> Red(x))\nTEXT:\tThe dog is not red.\nFOL:\t-Red(Dog)\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is round.\nFOL:\tRound(Anne)\nTEXT:\tDave is big.\nFOL:\tBig(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf Dave is big then Dave is kind.\nFOL:\t(Big(Dave) -> Kind(Dave))\nTEXT:\tIf something is young then it is cold.\nFOL:\tall x. (Young(x) -> Cold(x))\nTEXT:\tRound, cold things are big.\nFOL:\tall x. (Round(x) & Cold(x) -> Big(x))\nTEXT:\tAll kind, young things are smart.\nFOL:\tall x. (Kind(x) & Young(x) -> Smart(x))\nTEXT:\tKind, green things are round.\nFOL:\tall x. (Kind(x) & Green(x) -> Round(x))\nTEXT:\tYoung, round things are green.\nFOL:\tall x. (Young(x) & Round(x) -> Green(x))\nTEXT:\tIf Harry is young and Harry is cold then Harry is green.\nFOL:\t(Young(Harry) & Cold(Harry) -> Green(Harry))\nTEXT:\tYoung, green things are kind.\nFOL:\tall x. (Young(x) & Green(x) -> Kind(x))\nTEXT:\tAnne is not big.\nFOL:\t-Big(Anne)\n"], ["TEXT:\tDave is red.\nFOL:\tRed(Dave)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tHarry is round.\nFOL:\tRound(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf Harry is young then Harry is red.\nFOL:\tYoung(Harry) -> Red(Harry)\nTEXT:\tIf something is young then it is smart.\nFOL:\tall x. (Young(x) -> Smart(x))\nTEXT:\tCold, young things are round.\nFOL:\tall x. (Cold(x) & Young(x) -> Round(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tSmart things are young.\nFOL:\tall x. (Smart(x) -> Young(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tIf something is red then it is young.\nFOL:\tall x. (Red(x) -> Young(x))\nTEXT:\tAll smart things are nice.\nFOL:\tall x. (Smart(x) -> Nice(x))\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\n"], ["TEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe dog sees the lion.\nFOL:\tSees(Dog, Lion)\nTEXT:\tThe lion chases the rabbit.\nFOL:\tChases(Lion, Rabbit)\nTEXT:\tThe lion sees the dog.\nFOL:\tSees(Lion, Dog)\nTEXT:\tThe lion sees the rabbit.\nFOL:\tSees(Lion, Rabbit)\nTEXT:\tThe lion does not visit the dog.\nFOL:\t-Visits(Lion, Dog)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChases(Rabbit, Dog)\nTEXT:\tThe rabbit chases the lion.\nFOL:\tChases(Rabbit, Lion)\nTEXT:\tThe rabbit is nice.\nFOL:\tNice(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe tiger chases the lion.\nFOL:\tChases(Tiger, Lion)\nTEXT:\tThe tiger is big.\nFOL:\tBig(Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf someone visits the lion then they are not round.\nFOL:\tall x. (Visits(x, Lion) -> -Round(x))\nTEXT:\tIf someone visits the tiger then they are nice.\nFOL:\tall x. (Visits(x, Tiger) -> Nice(x))\nTEXT:\tIf someone sees the tiger and the tiger does not visit the rabbit then they are not nice.\nFOL:\tall x. (Sees(x, Tiger) & -Visits(Tiger, Rabbit) -> -Nice(x))\nTEXT:\tIf someone visits the dog then the dog is not cold.\nFOL:\tall x. (Visits(x, Dog) -> -Cold(Dog))\nTEXT:\tIf someone is cold and red then they do not chase the tiger.\nFOL:\tall x. (Cold(x) & Red(x) -> -Chases(x, Tiger))\nTEXT:\tIf someone is cold then they visit the lion.\nFOL:\tall x. (Cold(x) -> Visits(x, Lion))\nTEXT:\tIf someone is nice then they are cold.\nFOL:\tall x. (Nice(x) -> Cold(x))\nTEXT:\tIf someone sees the lion then the lion visits the tiger.\nFOL:\tall x. (Sees(x, Lion) -> Visits(Lion, Tiger))\nTEXT:\tIf someone chases the rabbit then they chase the dog.\nFOL:\tall x. (Chases(x, Rabbit) -> Chases(x, Dog))\nTEXT:\tThe lion visits the lion.\nFOL:\tVisits(Lion, Lion)\n"], ["TEXT:\tThe bear chases the cow.\nFOL:\tChases(Bear, Cow)\nTEXT:\tThe bear eats the rabbit.\nFOL:\tEats(Bear, Rabbit)\nTEXT:\tThe bear is big.\nFOL:\tBig(Bear)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear sees the cow.\nFOL:\tSees(Bear, Cow)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe cow eats the rabbit.\nFOL:\tEats(Cow, Rabbit)\nTEXT:\tThe dog chases the rabbit.\nFOL:\tChases(Dog, Rabbit)\nTEXT:\tThe dog eats the rabbit.\nFOL:\tEats(Dog, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tIf something sees the bear then it is cold.\nFOL:\tall x. (Sees(x, Bear) -> Cold(x))\nTEXT:\tIf something eats the rabbit then the rabbit is round.\nFOL:\tall x. (Eats(x, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then the cow eats the bear.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Eats(Cow, Bear))\nTEXT:\tIf something sees the bear and it chases the dog then the dog eats the bear.\nFOL:\tall x. (Sees(x, Bear) & Chases(x, Dog) -> Eats(Dog, Bear))\nTEXT:\tIf something eats the bear then it sees the rabbit.\nFOL:\tall x. (Eats(x, Bear) -> Sees(x, Rabbit))\nTEXT:\tIf something sees the rabbit and the rabbit chases the cow then it is big.\nFOL:\tall x. (Sees(x, Rabbit) & Chases(Rabbit, Cow) -> Big(x))\nTEXT:\tIf something sees the dog and the dog eats the rabbit then the rabbit is round.\nFOL:\tall x. (Sees(x, Dog) & Eats(Dog, Rabbit) -> Round(Rabbit))\nTEXT:\tIf something chases the bear then it eats the bear.\nFOL:\tall x. (Chases(x, Bear) -> Eats(x, Bear))\nTEXT:\tThe cow sees the rabbit.\nFOL:\tSees(Cow, Rabbit)\n"], ["TEXT:\tAnne is rough.\nFOL:\tRough(Anne)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tCharlie is rough.\nFOL:\tRough(Charlie)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tBlue, nice things are white.\nFOL:\tall x. ((Blue(x) & Nice(x)) -> White(x))\nTEXT:\tIf Charlie is round and Charlie is rough then Charlie is young.\nFOL:\t(Round(Charlie) & Rough(Charlie)) -> Young(Charlie)\nTEXT:\tAll nice, white things are rough.\nFOL:\tall x. ((Nice(x) & White(x)) -> Rough(x))\nTEXT:\tRound things are rough.\nFOL:\tall x. (Round(x) -> Rough(x))\nTEXT:\tIf something is young then it is red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tIf something is nice then it is round.\nFOL:\tall x. (Nice(x) -> Round(x))\nTEXT:\tAll rough, blue things are round.\nFOL:\tall x. ((Rough(x) & Blue(x)) -> Round(x))\nTEXT:\tYoung things are nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Charlie is red then Charlie is blue.\nFOL:\tRed(Charlie) -> Blue(Charlie)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is round.\nFOL:\tRound(Charlie)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tGary is round.\nFOL:\tRound(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is rough.\nFOL:\tRough(Harry)\nTEXT:\tAll quiet, round people are young.\nFOL:\tall x. (Quiet(x) & Round(x) -> Young(x))\nTEXT:\tAll young, blue people are rough.\nFOL:\tall x. (Young(x) & Blue(x) -> Rough(x))\nTEXT:\tAll round, big people are young.\nFOL:\tall x. (Round(x) & Big(x) -> Young(x))\nTEXT:\tBlue people are round.\nFOL:\tall x. (Blue(x) -> Round(x))\nTEXT:\tAll rough people are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tIf someone is big then they are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tIf someone is quiet and big then they are round.\nFOL:\tall x. (Quiet(x) & Big(x) -> Round(x))\nTEXT:\tIf Charlie is nice and Charlie is big then Charlie is blue.\nFOL:\t(Nice(Charlie) & Big(Charlie) -> Blue(Charlie))\nTEXT:\tAll nice people are big.\nFOL:\tall x. (Nice(x) -> Big(x))\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\n"], ["TEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear visits the tiger.\nFOL:\tVisits(Bear, Tiger)\nTEXT:\tThe cat is cold.\nFOL:\tCold(Cat)\nTEXT:\tThe cat does not need the tiger.\nFOL:\t-Needs(Cat, Tiger)\nTEXT:\tThe cat sees the mouse.\nFOL:\tSees(Cat, Mouse)\nTEXT:\tThe cat visits the bear.\nFOL:\tVisits(Cat, Bear)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tThe mouse sees the cat.\nFOL:\tSees(Mouse, Cat)\nTEXT:\tThe mouse visits the bear.\nFOL:\tVisits(Mouse, Bear)\nTEXT:\tThe tiger is not rough.\nFOL:\t-Rough(Tiger)\nTEXT:\tThe tiger does not need the mouse.\nFOL:\t-Needs(Tiger, Mouse)\nTEXT:\tIf someone is rough then they are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf someone needs the bear then they need the mouse.\nFOL:\tall x. (Needs(x, Bear) -> Needs(x, Mouse))\nTEXT:\tIf someone is kind then they need the mouse.\nFOL:\tall x. (Kind(x) -> Needs(x, Mouse))\nTEXT:\tIf someone sees the bear then they are rough.\nFOL:\tall x. (Sees(x, Bear) -> Rough(x))\nTEXT:\tIf someone visits the mouse then they see the bear.\nFOL:\tall x. (Visits(x, Mouse) -> Sees(x, Bear))\nTEXT:\tIf someone is kind then they visit the mouse.\nFOL:\tall x. (Kind(x) -> Visits(x, Mouse))\nTEXT:\tIf someone needs the bear then they are kind.\nFOL:\tall x. (Needs(x, Bear) -> Kind(x))\nTEXT:\tIf someone sees the bear and the bear does not visit the cat then the bear does not need the mouse.\nFOL:\tall x. (Sees(x, Bear) & -Visits(Bear, Cat) -> -Needs(Bear, Mouse))\nTEXT:\tIf someone visits the cat then the cat visits the bear.\nFOL:\tall x. (Visits(x, Cat) -> Visits(Cat, Bear))\nTEXT:\tThe mouse sees the bear.\nFOL:\tSees(Mouse, Bear)\n"], ["TEXT:\tThe bald eagle needs the cow.\nFOL:\tNeeds(BaldEagle, Cow)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe bald eagle needs the squirrel.\nFOL:\tNeeds(BaldEagle, Squirrel)\nTEXT:\tThe cow does not chase the rabbit.\nFOL:\t-Chases(Cow, Rabbit)\nTEXT:\tThe cow chases the squirrel.\nFOL:\tChases(Cow, Squirrel)\nTEXT:\tThe cow likes the bald eagle.\nFOL:\tLikes(Cow, BaldEagle)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe squirrel chases the cow.\nFOL:\tChases(Squirrel, Cow)\nTEXT:\tThe squirrel chases the rabbit.\nFOL:\tChases(Squirrel, Rabbit)\nTEXT:\tIf someone chases the bald eagle and they are big then they do not like the cow.\nFOL:\tall x. ((Chases(x, BaldEagle) & Big(x)) -> -Likes(x, Cow))\nTEXT:\tIf someone chases the cow and they are round then they are kind.\nFOL:\tall x. ((Chases(x, Cow) & Round(x)) -> Kind(x))\nTEXT:\tIf the cow likes the rabbit and the rabbit likes the bald eagle then the bald eagle needs the rabbit.\nFOL:\t((Likes(Cow, Rabbit) & Likes(Rabbit, BaldEagle)) -> Needs(BaldEagle, Rabbit))\nTEXT:\tIf someone likes the cow then they are green.\nFOL:\tall x. (Likes(x, Cow) -> Green(x))\nTEXT:\tIf someone is big and they need the bald eagle then they chase the cow.\nFOL:\tall x. ((Big(x) & Needs(x, BaldEagle)) -> Chases(x, Cow))\nTEXT:\tIf someone likes the bald eagle then they do not chase the bald eagle.\nFOL:\tall x. (Likes(x, BaldEagle) -> -Chases(x, BaldEagle))\nTEXT:\tIf someone needs the rabbit then the rabbit likes the cow.\nFOL:\tall x. (Needs(x, Rabbit) -> Likes(Rabbit, Cow))\nTEXT:\tIf the squirrel needs the cow and the cow chases the squirrel then the squirrel does not like the cow.\nFOL:\t((Needs(Squirrel, Cow) & Chases(Cow, Squirrel)) -> -Likes(Squirrel, Cow))\nTEXT:\tIf someone is green then they need the bald eagle.\nFOL:\tall x. (Green(x) -> Needs(x, BaldEagle))\nTEXT:\tThe bald eagle does not like the rabbit.\nFOL:\t-Likes(BaldEagle, Rabbit)\n"], ["TEXT:\tThe bald eagle chases the lion.\nFOL:\tChase(BaldEagle, Lion)\nTEXT:\tThe bald eagle is not green.\nFOL:\t-Green(BaldEagle)\nTEXT:\tThe bald eagle is round.\nFOL:\tRound(BaldEagle)\nTEXT:\tThe bald eagle likes the lion.\nFOL:\tLikes(BaldEagle, Lion)\nTEXT:\tThe dog is red.\nFOL:\tRed(Dog)\nTEXT:\tThe lion does not chase the dog.\nFOL:\t-Chase(Lion, Dog)\nTEXT:\tThe lion is round.\nFOL:\tRound(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe rabbit chases the dog.\nFOL:\tChase(Rabbit, Dog)\nTEXT:\tThe rabbit eats the lion.\nFOL:\tEat(Rabbit, Lion)\nTEXT:\tIf something chases the dog then it likes the rabbit.\nFOL:\tall x. (Chase(x, Dog) -> Likes(x, Rabbit))\nTEXT:\tIf something is red and it chases the lion then the lion likes the bald eagle.\nFOL:\tall x. ((Red(x) & Chase(x, Lion)) -> Likes(Lion, BaldEagle))\nTEXT:\tIf something is big then it chases the rabbit.\nFOL:\tall x. (Big(x) -> Chase(x, Rabbit))\nTEXT:\tIf something is round and it chases the bald eagle then the bald eagle does not like the dog.\nFOL:\tall x. ((Round(x) & Chase(x, BaldEagle)) -> -Likes(BaldEagle, Dog))\nTEXT:\tIf something likes the lion then it is red.\nFOL:\tall x. (Likes(x, Lion) -> Red(x))\nTEXT:\tIf something is red and round then it does not chase the bald eagle.\nFOL:\tall x. ((Red(x) & Round(x)) -> -Chase(x, BaldEagle))\nTEXT:\tIf something is red and young then it chases the bald eagle.\nFOL:\tall x. ((Red(x) & Young(x)) -> Chase(x, BaldEagle))\nTEXT:\tIf something likes the bald eagle and the bald eagle chases the lion then it likes the lion.\nFOL:\tall x. ((Likes(x, BaldEagle) & Chase(BaldEagle, Lion)) -> Likes(x, Lion))\nTEXT:\tIf something eats the bald eagle then the bald eagle is red.\nFOL:\tall x. (Eat(x, BaldEagle) -> Red(BaldEagle))\nTEXT:\tThe bald eagle does not chase the bald eagle.\nFOL:\t-Chase(BaldEagle, BaldEagle)\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is green.\nFOL:\tGreen(Erin)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tAll red things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tIf Charlie is quiet then Charlie is furry.\nFOL:\tQuiet(Charlie) -> Furry(Charlie)\nTEXT:\tAll quiet, red things are young.\nFOL:\tall x. (Quiet(x) & Red(x) -> Young(x))\nTEXT:\tIf something is young then it is nice.\nFOL:\tall x. (Young(x) -> Nice(x))\nTEXT:\tIf Bob is big and Bob is young then Bob is furry.\nFOL:\t(Big(Bob) & Young(Bob)) -> Furry(Bob)\nTEXT:\tFurry things are red.\nFOL:\tall x. (Furry(x) -> Red(x))\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)"], ["TEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tAll quiet, cold things are young.\nFOL:\tall x. ((Quiet(x) & Cold(x)) -> Young(x))\nTEXT:\tIf something is smart then it is blue.\nFOL:\tall x. (Smart(x) -> Blue(x))\nTEXT:\tIf something is quiet and smart then it is nice.\nFOL:\tall x. ((Quiet(x) & Smart(x)) -> Nice(x))\nTEXT:\tSmart, young things are white.\nFOL:\tall x. ((Smart(x) & Young(x)) -> White(x))\nTEXT:\tIf something is nice and blue then it is quiet.\nFOL:\tall x. ((Nice(x) & Blue(x)) -> Quiet(x))\nTEXT:\tQuiet, nice things are cold.\nFOL:\tall x. ((Quiet(x) & Nice(x)) -> Cold(x))\nTEXT:\tAll blue things are quiet.\nFOL:\tall x. (Blue(x) -> Quiet(x))\nTEXT:\tAll white things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tAll young things are blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\n"], ["TEXT:\tThe cat is young.\nFOL:\tYoung(Cat)\nTEXT:\tThe cow is young.\nFOL:\tYoung(Cow)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe mouse needs the rabbit.\nFOL:\tNeeds(Mouse, Rabbit)\nTEXT:\tThe mouse does not visit the cow.\nFOL:\t-Visits(Mouse, Cow)\nTEXT:\tThe mouse visits the rabbit.\nFOL:\tVisits(Mouse, Rabbit)\nTEXT:\tThe rabbit is round.\nFOL:\tRound(Rabbit)\nTEXT:\tThe rabbit does not need the cat.\nFOL:\t-Needs(Rabbit, Cat)\nTEXT:\tThe rabbit visits the mouse.\nFOL:\tVisits(Rabbit, Mouse)\nTEXT:\tIf someone eats the cat and they eat the cow then they do not need the mouse.\nFOL:\tall x. (Eats(x, Cat) & Eats(x, Cow) -> -Needs(x, Mouse))\nTEXT:\tIf someone visits the cat then the cat eats the cow.\nFOL:\tall x. (Visits(x, Cat) -> Eats(Cat, Cow))\nTEXT:\tAll nice people are red.\nFOL:\tall x. (Nice(x) -> Red(x))\nTEXT:\tIf the mouse needs the rabbit and the mouse eats the cat then the mouse eats the cow.\nFOL:\t(Needs(Mouse, Rabbit) & Eats(Mouse, Cat) -> Eats(Mouse, Cow))\nTEXT:\tIf someone is red and they visit the mouse then the mouse needs the cow.\nFOL:\tall x. (Red(x) & Visits(x, Mouse) -> Needs(Mouse, Cow))\nTEXT:\tIf someone needs the cow then the cow visits the cat.\nFOL:\tall x. (Needs(x, Cow) -> Visits(Cow, Cat))\nTEXT:\tAll round people are nice.\nFOL:\tall x. (Round(x) -> Nice(x))\nTEXT:\tIf someone needs the cat and the cat visits the rabbit then they do not eat the rabbit.\nFOL:\tall x. (Needs(x, Cat) & Visits(Cat, Rabbit) -> -Eats(x, Rabbit))\nTEXT:\tThe cow visits the cat.\nFOL:\tVisits(Cow, Cat)\n"], ["TEXT:\tThe cat eats the tiger.\nFOL:\tEats(Cat, Tiger)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe lion likes the cat.\nFOL:\tLikes(Lion, Cat)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit is not young.\nFOL:\t-Young(Rabbit)\nTEXT:\tThe rabbit likes the lion.\nFOL:\tLikes(Rabbit, Lion)\nTEXT:\tThe tiger likes the cat.\nFOL:\tLikes(Tiger, Cat)\nTEXT:\tIf someone is cold and they like the tiger then the tiger does not like the lion.\nFOL:\tall x. (Cold(x) & Likes(x, Tiger) -> -Likes(Tiger, Lion))\nTEXT:\tIf someone chases the tiger then the tiger likes the lion.\nFOL:\tall x. (Chases(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf the tiger is cold then the tiger chases the rabbit.\nFOL:\t(Cold(Tiger) -> Chases(Tiger, Rabbit))\nTEXT:\tIf the lion chases the cat then the cat chases the tiger.\nFOL:\t(Chases(Lion, Cat) -> Chases(Cat, Tiger))\nTEXT:\tIf someone eats the tiger then the tiger is cold.\nFOL:\tall x. (Eats(x, Tiger) -> Cold(Tiger))\nTEXT:\tIf someone is young then they chase the tiger.\nFOL:\tall x. (Young(x) -> Chases(x, Tiger))\nTEXT:\tIf someone chases the tiger then the tiger does not like the rabbit.\nFOL:\tall x. (Chases(x, Tiger) -> -Likes(Tiger, Rabbit))\nTEXT:\tIf the tiger likes the cat and the tiger chases the rabbit then the tiger is young.\nFOL:\t(Likes(Tiger, Cat) & Chases(Tiger, Rabbit) -> Young(Tiger))\nTEXT:\tIf the lion is rough and the lion is not red then the lion does not like the rabbit.\nFOL:\t(Rough(Lion) & -Red(Lion) -> -Likes(Lion, Rabbit))\nTEXT:\tThe tiger does not chase the tiger.\nFOL:\t-Chases(Tiger, Tiger)\n"], ["TEXT:\tAnne is green.\nFOL:\tGreen(Anne)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is red.\nFOL:\tRed(Gary)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tQuiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tQuiet, blue things are green.\nFOL:\tall x. (Quiet(x) & Blue(x) -> Green(x))\nTEXT:\tBlue, smart things are red.\nFOL:\tall x. (Blue(x) & Smart(x) -> Red(x))\nTEXT:\tAll nice things are smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll green, big things are quiet.\nFOL:\tall x. (Green(x) & Big(x) -> Quiet(x))\nTEXT:\tIf Anne is red and Anne is blue then Anne is smart.\nFOL:\t(Red(Anne) & Blue(Anne)) -> Smart(Anne)\nTEXT:\tAll quiet things are smart.\nFOL:\tall x. (Quiet(x) -> Smart(x))\nTEXT:\tQuiet, smart things are blue.\nFOL:\tall x. (Quiet(x) & Smart(x) -> Blue(x))\nTEXT:\tIf something is big then it is green.\nFOL:\tall x. (Big(x) -> Green(x))\nTEXT:\tAnne is red.\nFOL:\tRed(Anne)\n"], ["TEXT:\tThe cat eats the dog.\nFOL:\tEats(Cat, Dog)\nTEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat eats the squirrel.\nFOL:\tEats(Cat, Squirrel)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat sees the dog.\nFOL:\tSees(Cat, Dog)\nTEXT:\tThe cat sees the rabbit.\nFOL:\tSees(Cat, Rabbit)\nTEXT:\tThe cat does not see the squirrel.\nFOL:\t-Sees(Cat, Squirrel)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog eats the squirrel.\nFOL:\tEats(Dog, Squirrel)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe rabbit likes the dog.\nFOL:\tLikes(Rabbit, Dog)\nTEXT:\tThe rabbit likes the squirrel.\nFOL:\tLikes(Rabbit, Squirrel)\nTEXT:\tThe rabbit sees the squirrel.\nFOL:\tSees(Rabbit, Squirrel)\nTEXT:\tThe squirrel is round.\nFOL:\tRound(Squirrel)\nTEXT:\tThe squirrel sees the rabbit.\nFOL:\tSees(Squirrel, Rabbit)\nTEXT:\tIf someone is big then they like the cat.\nFOL:\tall x. (Big(x) -> Likes(x, Cat))\nTEXT:\tIf someone is round then they are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tIf someone eats the squirrel and the squirrel eats the dog then they eat the dog.\nFOL:\tall x. ((Eats(x, Squirrel) & Eats(Squirrel, Dog)) -> Eats(x, Dog))\nTEXT:\tIf someone eats the cat then they are round.\nFOL:\tall x. (Eats(x, Cat) -> Round(x))\nTEXT:\tIf the cat is green and the cat eats the rabbit then the cat is big.\nFOL:\t(Green(Cat) & Eats(Cat, Rabbit)) -> Big(Cat)\nTEXT:\tIf someone likes the rabbit and the rabbit sees the cat then the rabbit likes the dog.\nFOL:\tall x. ((Likes(x, Rabbit) & Sees(Rabbit, Cat)) -> Likes(Rabbit, Dog))\nTEXT:\tIf someone eats the squirrel and they eat the dog then the dog is red.\nFOL:\tall x. ((Eats(x, Squirrel) & Eats(x, Dog)) -> Red(Dog))\nTEXT:\tIf someone is big and they see the rabbit then the rabbit eats the cat.\nFOL:\tall x. ((Big(x) & Sees(x, Rabbit)) -> Eats(Rabbit, Cat))\nTEXT:\tIf the cat eats the squirrel then the squirrel does not eat the cat.\nFOL:\tEats(Cat, Squirrel) -> -Eats(Squirrel, Cat)\nTEXT:\tThe dog is round.\nFOL:\tRound(Dog)\n"], ["TEXT:\tAnne is furry.\nFOL:\tFurry(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is green and furry then it is quiet.\nFOL:\tall x. ((Green(x) & Furry(x)) -> Quiet(x))\nTEXT:\tYoung things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf something is quiet then it is green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tSmart, nice things are green.\nFOL:\tall x. ((Smart(x) & Nice(x)) -> Green(x))\nTEXT:\tAll nice things are furry.\nFOL:\tall x. (Nice(x) -> Furry(x))\nTEXT:\tAll nice things are not smart.\nFOL:\tall x. (Nice(x) -> -Smart(x))\nTEXT:\tFurry things are young.\nFOL:\tall x. (Furry(x) -> Young(x))\nTEXT:\tAll furry things are cold.\nFOL:\tall x. (Furry(x) -> Cold(x))\nTEXT:\tAll green, quiet things are nice.\nFOL:\tall x. ((Green(x) & Quiet(x)) -> Nice(x))\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\n"], ["TEXT:\tThe dog likes the mouse.\nFOL:\tLikes(Dog, Mouse)\nTEXT:\tThe dog likes the squirrel.\nFOL:\tLikes(Dog, Squirrel)\nTEXT:\tThe mouse eats the dog.\nFOL:\tEats(Mouse, Dog)\nTEXT:\tThe squirrel is cold.\nFOL:\tCold(Squirrel)\nTEXT:\tThe squirrel is green.\nFOL:\tGreen(Squirrel)\nTEXT:\tThe squirrel likes the tiger.\nFOL:\tLikes(Squirrel, Tiger)\nTEXT:\tThe tiger eats the squirrel.\nFOL:\tEats(Tiger, Squirrel)\nTEXT:\tIf something sees the squirrel then the squirrel eats the tiger.\nFOL:\tall x. (Sees(x, Squirrel) -> Eats(Squirrel, Tiger))\nTEXT:\tIf something is cold then it sees the squirrel.\nFOL:\tall x. (Cold(x) -> Sees(x, Squirrel))\nTEXT:\tIf something likes the squirrel then the squirrel likes the dog.\nFOL:\tall x. (Likes(x, Squirrel) -> Likes(Squirrel, Dog))\nTEXT:\tIf something sees the mouse then the mouse eats the squirrel.\nFOL:\tall x. (Sees(x, Mouse) -> Eats(Mouse, Squirrel))\nTEXT:\tIf something sees the squirrel then it is kind.\nFOL:\tall x. (Sees(x, Squirrel) -> Kind(x))\nTEXT:\tIf something likes the dog and it eats the mouse then the mouse is cold.\nFOL:\tall x. ((Likes(x, Dog) & Eats(x, Mouse)) -> Cold(Mouse))\nTEXT:\tIf something eats the dog and the dog eats the mouse then the dog sees the tiger.\nFOL:\tall x. ((Eats(x, Dog) & Eats(Dog, Mouse)) -> Sees(Dog, Tiger))\nTEXT:\tIf something is kind then it eats the mouse.\nFOL:\tall x. (Kind(x) -> Eats(x, Mouse))\nTEXT:\tThe tiger is not kind.\nFOL:\t-Kind(Tiger)\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle needs the bear.\nFOL:\tNeeds(BaldEagle, Bear)\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\nTEXT:\tThe lion needs the bear.\nFOL:\tNeeds(Lion, Bear)\nTEXT:\tThe squirrel is kind.\nFOL:\tKind(Squirrel)\nTEXT:\tThe squirrel needs the bald eagle.\nFOL:\tNeeds(Squirrel, BaldEagle)\nTEXT:\tThe squirrel visits the lion.\nFOL:\tVisits(Squirrel, Lion)\nTEXT:\tIf someone is blue and rough then they need the bear.\nFOL:\tall x. ((Blue(x) & Rough(x)) -> Needs(x, Bear))\nTEXT:\tIf someone needs the bald eagle then they are blue.\nFOL:\tall x. (Needs(x, BaldEagle) -> Blue(x))\nTEXT:\tIf someone needs the lion then they eat the lion.\nFOL:\tall x. (Needs(x, Lion) -> Eats(x, Lion))\nTEXT:\tIf someone eats the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Bear) -> Kind(Bear))\nTEXT:\tIf someone is blue then they visit the bear.\nFOL:\tall x. (Blue(x) -> Visits(x, Bear))\nTEXT:\tIf the lion is rough and the lion eats the squirrel then the lion is blue.\nFOL:\t((Rough(Lion) & Eats(Lion, Squirrel)) -> Blue(Lion))\nTEXT:\tIf someone is blue and they visit the bear then the bear needs the bald eagle.\nFOL:\tall x. ((Blue(x) & Visits(x, Bear)) -> Needs(Bear, BaldEagle))\nTEXT:\tThe bear is not kind.\nFOL:\t-Kind(Bear)\n"], ["TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is rough.\nFOL:\tRough(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is blue.\nFOL:\tBlue(Erin)\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is rough.\nFOL:\tRough(Fiona)\nTEXT:\tGary is green.\nFOL:\tGreen(Gary)\nTEXT:\tGary is nice.\nFOL:\tNice(Gary)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tRough things are round.\nFOL:\tall x. (Rough(x) -> Round(x))\nTEXT:\tGreen, nice things are quiet.\nFOL:\tall x. (Green(x) & Nice(x) -> Quiet(x))\nTEXT:\tRound, rough things are green.\nFOL:\tall x. (Round(x) & Rough(x) -> Green(x))\nTEXT:\tAll quiet things are green.\nFOL:\tall x. (Quiet(x) -> Green(x))\nTEXT:\tAll green things are nice.\nFOL:\tall x. (Green(x) -> Nice(x))\nTEXT:\tAll quiet things are rough.\nFOL:\tall x. (Quiet(x) -> Rough(x))\nTEXT:\tAll rough, nice things are quiet.\nFOL:\tall x. (Rough(x) & Nice(x) -> Quiet(x))\nTEXT:\tAll quiet, green things are rough.\nFOL:\tall x. (Quiet(x) & Green(x) -> Rough(x))\nTEXT:\tIf something is nice and quiet then it is blue.\nFOL:\tall x. (Nice(x) & Quiet(x) -> Blue(x))\nTEXT:\tFiona is not blue.\nFOL:\t-Blue(Fiona)\n"], ["TEXT:\tAnne is nice.\nFOL:\tNice(Anne)\nTEXT:\tAnne is smart.\nFOL:\tSmart(Anne)\nTEXT:\tCharlie is green.\nFOL:\tGreen(Charlie)\nTEXT:\tFiona is nice.\nFOL:\tNice(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tFiona is white.\nFOL:\tWhite(Fiona)\nTEXT:\tHarry is blue.\nFOL:\tBlue(Harry)\nTEXT:\tWhite, kind things are nice.\nFOL:\tall x. (White(x) & Kind(x) -> Nice(x))\nTEXT:\tIf something is smart and kind then it is green.\nFOL:\tall x. (Smart(x) & Kind(x) -> Green(x))\nTEXT:\tIf something is round and kind then it is white.\nFOL:\tall x. (Round(x) & Kind(x) -> White(x))\nTEXT:\tSmart things are kind.\nFOL:\tall x. (Smart(x) -> Kind(x))\nTEXT:\tNice, white things are kind.\nFOL:\tall x. (Nice(x) & White(x) -> Kind(x))\nTEXT:\tRound things are kind.\nFOL:\tall x. (Round(x) -> Kind(x))\nTEXT:\tIf something is nice then it is smart.\nFOL:\tall x. (Nice(x) -> Smart(x))\nTEXT:\tAll white things are round.\nFOL:\tall x. (White(x) -> Round(x))\nTEXT:\tIf Charlie is green then Charlie is white.\nFOL:\t(Green(Charlie) -> White(Charlie))\nTEXT:\tHarry is not green.\nFOL:\t-Green(Harry)\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is red.\nFOL:\tRed(Charlie)\nTEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is cold.\nFOL:\tCold(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tGary is young.\nFOL:\tYoung(Gary)\nTEXT:\tIf Gary is rough and Gary is young then Gary is quiet.\nFOL:\t(Rough(Gary) & Young(Gary)) -> Quiet(Gary)\nTEXT:\tAll quiet things are red.\nFOL:\tall x. (Quiet(x) -> Red(x))\nTEXT:\tYoung, blue things are red.\nFOL:\tall x. (Young(x) & Blue(x) -> Red(x))\nTEXT:\tFurry, rough things are red.\nFOL:\tall x. (Furry(x) & Rough(x) -> Red(x))\nTEXT:\tRed things are rough.\nFOL:\tall x. (Red(x) -> Rough(x))\nTEXT:\tAll young, rough things are cold.\nFOL:\tall x. (Young(x) & Rough(x) -> Cold(x))\nTEXT:\tIf something is rough and not young then it is cold.\nFOL:\tall x. (Rough(x) & -Young(x) -> Cold(x))\nTEXT:\tIf something is cold then it is furry.\nFOL:\tall x. (Cold(x) -> Furry(x))\nTEXT:\tAll young things are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tDave is not quiet.\nFOL:\t-Quiet(Dave)\n"], ["TEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe cow sees the bear.\nFOL:\tSees(Cow, Bear)\nTEXT:\tThe mouse is young.\nFOL:\tYoung(Mouse)\nTEXT:\tThe mouse does not need the rabbit.\nFOL:\t-Needs(Mouse, Rabbit)\nTEXT:\tThe mouse sees the rabbit.\nFOL:\tSees(Mouse, Rabbit)\nTEXT:\tThe rabbit chases the bear.\nFOL:\tChases(Rabbit, Bear)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit needs the cow.\nFOL:\tNeeds(Rabbit, Cow)\nTEXT:\tThe rabbit does not need the mouse.\nFOL:\t-Needs(Rabbit, Mouse)\nTEXT:\tThe rabbit sees the cow.\nFOL:\tSees(Rabbit, Cow)\nTEXT:\tAll red, rough things are nice.\nFOL:\tall x. ((Red(x) & Rough(x)) -> Nice(x))\nTEXT:\tIf something chases the cow and the cow chases the bear then the bear is big.\nFOL:\tall x. ((Chases(x, Cow) & Chases(Cow, Bear)) -> Big(Bear))\nTEXT:\tIf something sees the mouse then the mouse is nice.\nFOL:\tall x. (Sees(x, Mouse) -> Nice(Mouse))\nTEXT:\tIf something chases the cow then it is red.\nFOL:\tall x. (Chases(x, Cow) -> Red(x))\nTEXT:\tIf the cow needs the rabbit then the rabbit is rough.\nFOL:\t(Needs(Cow, Rabbit) -> Rough(Rabbit))\nTEXT:\tIf something chases the cow then the cow chases the bear.\nFOL:\tall x. (Chases(x, Cow) -> Chases(Cow, Bear))\nTEXT:\tIf something needs the bear and the bear is rough then it sees the bear.\nFOL:\tall x. ((Needs(x, Bear) & Rough(Bear)) -> Sees(x, Bear))\nTEXT:\tIf something is nice then it sees the mouse.\nFOL:\tall x. (Nice(x) -> Sees(x, Mouse))\nTEXT:\tBig things are rough.\nFOL:\tall x. (Big(x) -> Rough(x))\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tIf Charlie is kind and Charlie is young then Charlie is furry.\nFOL:\t(Kind(Charlie) & Young(Charlie)) -> Furry(Charlie)\nTEXT:\tIf someone is furry and rough then they are big.\nFOL:\tall x. ((Furry(x) & Rough(x)) -> Big(x))\nTEXT:\tIf someone is young and furry then they are rough.\nFOL:\tall x. ((Young(x) & Furry(x)) -> Rough(x))\nTEXT:\tIf someone is furry and big then they are nice.\nFOL:\tall x. ((Furry(x) & Big(x)) -> Nice(x))\nTEXT:\tIf someone is kind and nice then they are not cold.\nFOL:\tall x. ((Kind(x) & Nice(x)) -> -Cold(x))\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\n"], ["TEXT:\tBob is smart.\nFOL:\tSmart(Bob)\nTEXT:\tCharlie is young.\nFOL:\tYoung(Charlie)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is quiet.\nFOL:\tQuiet(Erin)\nTEXT:\tErin is smart.\nFOL:\tSmart(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tNice, smart things are quiet.\nFOL:\tall x. ((Nice(x) & Smart(x)) -> Quiet(x))\nTEXT:\tAll green things are quiet.\nFOL:\tall x. (Green(x) -> Quiet(x))\nTEXT:\tIf something is red then it is furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart things are furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tIf Bob is furry and Bob is smart then Bob is red.\nFOL:\t(Furry(Bob) & Smart(Bob)) -> Red(Bob)\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tIf something is red then it is nice.\nFOL:\tall x. (Red(x) -> Nice(x))\nTEXT:\tBob is not nice.\nFOL:\t-Nice(Bob)\n"], ["TEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is rough.\nFOL:\tRough(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tDave is nice.\nFOL:\tNice(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tAll rough things are nice.\nFOL:\tall x. (Rough(x) -> Nice(x))\nTEXT:\tNice things are rough.\nFOL:\tall x. (Nice(x) -> Rough(x))\nTEXT:\tAll round, quiet things are cold.\nFOL:\tall x. ((Round(x) & Quiet(x)) -> Cold(x))\nTEXT:\tAll big, round things are green.\nFOL:\tall x. ((Big(x) & Round(x)) -> Green(x))\nTEXT:\tIf something is big and quiet then it is round.\nFOL:\tall x. ((Big(x) & Quiet(x)) -> Round(x))\nTEXT:\tIf something is rough and quiet then it is green.\nFOL:\tall x. ((Rough(x) & Quiet(x)) -> Green(x))\nTEXT:\tRough things are quiet.\nFOL:\tall x. (Rough(x) -> Quiet(x))\nTEXT:\tAll green things are big.\nFOL:\tall x. (Green(x) -> Big(x))\nTEXT:\tErin is round.\nFOL:\tRound(Erin)\n"], ["TEXT:\tAnne is not smart.\nFOL:\t-Smart(Anne)\nTEXT:\tAnne is young.\nFOL:\tYoung(Anne)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tErin is furry.\nFOL:\tFurry(Erin)\nTEXT:\tErin is white.\nFOL:\tWhite(Erin)\nTEXT:\tGary is smart.\nFOL:\tSmart(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tYoung things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tAll young things are red.\nFOL:\tall x. (Young(x) -> Red(x))\nTEXT:\tWhite, red things are quiet.\nFOL:\tall x. (White(x) & Red(x) -> Quiet(x))\nTEXT:\tAll furry things are quiet.\nFOL:\tall x. (Furry(x) -> Quiet(x))\nTEXT:\tWhite things are smart.\nFOL:\tall x. (White(x) -> Smart(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tAll big, red things are furry.\nFOL:\tall x. (Big(x) & Red(x) -> Furry(x))\nTEXT:\tIf something is smart then it is furry.\nFOL:\tall x. (Smart(x) -> Furry(x))\nTEXT:\tQuiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tErin is not furry.\nFOL:\t-Furry(Erin)\n"], ["TEXT:\tThe bear chases the cat.\nFOL:\tChases(Bear, Cat)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe lion chases the bear.\nFOL:\tChases(Lion, Bear)\nTEXT:\tThe lion chases the cat.\nFOL:\tChases(Lion, Cat)\nTEXT:\tThe lion is kind.\nFOL:\tKind(Lion)\nTEXT:\tThe lion is not young.\nFOL:\t-Young(Lion)\nTEXT:\tThe lion sees the bear.\nFOL:\tSees(Lion, Bear)\nTEXT:\tThe lion sees the mouse.\nFOL:\tSees(Lion, Mouse)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse is kind.\nFOL:\tKind(Mouse)\nTEXT:\tThe mouse needs the bear.\nFOL:\tNeeds(Mouse, Bear)\nTEXT:\tIf something needs the lion then the lion chases the cat.\nFOL:\tall x. (Needs(x, Lion) -> Chases(Lion, Cat))\nTEXT:\tIf something chases the cat then the cat is cold.\nFOL:\tall x. (Chases(x, Cat) -> Cold(Cat))\nTEXT:\tIf something is big then it is young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tIf something needs the lion then the lion is big.\nFOL:\tall x. (Needs(x, Lion) -> Big(Lion))\nTEXT:\tIf something sees the lion then it does not see the bear.\nFOL:\tall x. (Sees(x, Lion) -> -Sees(x, Bear))\nTEXT:\tIf something chases the mouse then the mouse sees the cat.\nFOL:\tall x. (Chases(x, Mouse) -> Sees(Mouse, Cat))\nTEXT:\tIf something sees the cat and it is kind then it is cold.\nFOL:\tall x. ((Sees(x, Cat) & Kind(x)) -> Cold(x))\nTEXT:\tIf something needs the bear and it is not young then it is cold.\nFOL:\tall x. ((Needs(x, Bear) & -Young(x)) -> Cold(x))\nTEXT:\tIf something is cold then it chases the mouse.\nFOL:\tall x. (Cold(x) -> Chases(x, Mouse))\nTEXT:\tThe lion does not chase the mouse.\nFOL:\t-Chases(Lion, Mouse)\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is quiet.\nFOL:\tQuiet(Bob)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tDave is quiet.\nFOL:\tQuiet(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tGary is blue.\nFOL:\tBlue(Gary)\nTEXT:\tGary is quiet.\nFOL:\tQuiet(Gary)\nTEXT:\tAll white, green things are cold.\nFOL:\tall x. ((White(x) & Green(x)) -> Cold(x))\nTEXT:\tWhite things are cold.\nFOL:\tall x. (White(x) -> Cold(x))\nTEXT:\tRed, smart things are not blue.\nFOL:\tall x. ((Red(x) & Smart(x)) -> -Blue(x))\nTEXT:\tAll red things are green.\nFOL:\tall x. (Red(x) -> Green(x))\nTEXT:\tGreen, white things are quiet.\nFOL:\tall x. ((Green(x) & White(x)) -> Quiet(x))\nTEXT:\tSmart, white things are red.\nFOL:\tall x. ((Smart(x) & White(x)) -> Red(x))\nTEXT:\tIf Charlie is quiet then Charlie is red.\nFOL:\t(Quiet(Charlie) -> Red(Charlie))\nTEXT:\tIf something is blue and cold then it is smart.\nFOL:\tall x. ((Blue(x) & Cold(x)) -> Smart(x))\nTEXT:\tAll white, cold things are smart.\nFOL:\tall x. ((White(x) & Cold(x)) -> Smart(x))\nTEXT:\tCharlie is not red.\nFOL:\t-Red(Charlie)\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is quiet.\nFOL:\tQuiet(Anne)\nTEXT:\tBob is blue.\nFOL:\tBlue(Bob)\nTEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is white.\nFOL:\tWhite(Gary)\nTEXT:\tHarry is kind.\nFOL:\tKind(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tHarry is young.\nFOL:\tYoung(Harry)\nTEXT:\tIf someone is blue and white then they are young.\nFOL:\tall x. (Blue(x) & White(x) -> Young(x))\nTEXT:\tBlue, big people are young.\nFOL:\tall x. (Blue(x) & Big(x) -> Young(x))\nTEXT:\tBlue, white people are round.\nFOL:\tall x. (Blue(x) & White(x) -> Round(x))\nTEXT:\tWhite people are big.\nFOL:\tall x. (White(x) -> Big(x))\nTEXT:\tWhite, big people are blue.\nFOL:\tall x. (White(x) & Big(x) -> Blue(x))\nTEXT:\tRound people are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tIf someone is young then they are white.\nFOL:\tall x. (Young(x) -> White(x))\nTEXT:\tKind people are round.\nFOL:\tall x. (Kind(x) -> Round(x))\nTEXT:\tAll big, blue people are young.\nFOL:\tall x. (Big(x) & Blue(x) -> Young(x))\nTEXT:\tAnne is not blue.\nFOL:\t-Blue(Anne)\n"], ["TEXT:\tThe bald eagle chases the lion.\nFOL:\tChases(BaldEagle, Lion)\nTEXT:\tThe bear sees the dog.\nFOL:\tSees(Bear, Dog)\nTEXT:\tThe dog is rough.\nFOL:\tRough(Dog)\nTEXT:\tThe dog does not visit the bald eagle.\nFOL:\t-Visits(Dog, BaldEagle)\nTEXT:\tThe dog visits the bear.\nFOL:\tVisits(Dog, Bear)\nTEXT:\tThe lion chases the dog.\nFOL:\tChases(Lion, Dog)\nTEXT:\tThe lion visits the bald eagle.\nFOL:\tVisits(Lion, BaldEagle)\nTEXT:\tIf something sees the bear then the bear sees the lion.\nFOL:\tall x. (Sees(x, Bear) -> Sees(Bear, Lion))\nTEXT:\tIf the bear does not see the lion then the lion visits the bear.\nFOL:\t(-Sees(Bear, Lion) -> Visits(Lion, Bear))\nTEXT:\tYoung things are kind.\nFOL:\tall x. (Young(x) -> Kind(x))\nTEXT:\tIf something is kind then it does not visit the lion.\nFOL:\tall x. (Kind(x) -> -Visits(x, Lion))\nTEXT:\tIf something visits the lion and it is young then it does not chase the bald eagle.\nFOL:\tall x. ((Visits(x, Lion) & Young(x)) -> -Chases(x, BaldEagle))\nTEXT:\tIf something chases the bear then the bear is young.\nFOL:\tall x. (Chases(x, Bear) -> Young(Bear))\nTEXT:\tIf something visits the bear then the bear chases the bald eagle.\nFOL:\tall x. (Visits(x, Bear) -> Chases(Bear, BaldEagle))\nTEXT:\tIf something chases the bear then it visits the bald eagle.\nFOL:\tall x. (Chases(x, Bear) -> Visits(x, BaldEagle))\nTEXT:\tIf something chases the bald eagle then the bald eagle chases the bear.\nFOL:\tall x. (Chases(x, BaldEagle) -> Chases(BaldEagle, Bear))\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\n"], ["TEXT:\tBob is big.\nFOL:\tBig(Bob)\nTEXT:\tBob is round.\nFOL:\tRound(Bob)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tFiona is not big.\nFOL:\t-Big(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not big.\nFOL:\t-Big(Gary)\nTEXT:\tGary is rough.\nFOL:\tRough(Gary)\nTEXT:\tIf something is quiet then it is young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll rough things are cold.\nFOL:\tall x. (Rough(x) -> Cold(x))\nTEXT:\tIf something is cold then it is quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tIf something is quiet and not young then it is round.\nFOL:\tall x. ((Quiet(x) & -Young(x)) -> Round(x))\nTEXT:\tBlue things are not round.\nFOL:\tall x. (Blue(x) -> -Round(x))\nTEXT:\tIf something is rough and not young then it is big.\nFOL:\tall x. ((Rough(x) & -Young(x)) -> Big(x))\nTEXT:\tIf something is round and cold then it is blue.\nFOL:\tall x. ((Round(x) & Cold(x)) -> Blue(x))\nTEXT:\tRound, rough things are blue.\nFOL:\tall x. ((Round(x) & Rough(x)) -> Blue(x))\nTEXT:\tIf something is young then it is blue.\nFOL:\tall x. (Young(x) -> Blue(x))\nTEXT:\tGary is not blue.\nFOL:\t-Blue(Gary)\n"], ["TEXT:\tThe cat is blue.\nFOL:\tBlue(Cat)\nTEXT:\tThe cat is red.\nFOL:\tRed(Cat)\nTEXT:\tThe cat visits the cow.\nFOL:\tVisits(Cat, Cow)\nTEXT:\tThe cow is blue.\nFOL:\tBlue(Cow)\nTEXT:\tThe cow needs the cat.\nFOL:\tNeeds(Cow, Cat)\nTEXT:\tThe cow needs the mouse.\nFOL:\tNeeds(Cow, Mouse)\nTEXT:\tThe cow visits the mouse.\nFOL:\tVisits(Cow, Mouse)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the cow.\nFOL:\tNeeds(Mouse, Cow)\nTEXT:\tThe tiger is blue.\nFOL:\tBlue(Tiger)\nTEXT:\tThe tiger visits the cat.\nFOL:\tVisits(Tiger, Cat)\nTEXT:\tIf something visits the tiger and the tiger is green then it is green.\nFOL:\tall x. ((Visits(x, Tiger) & Green(Tiger)) -> Green(x))\nTEXT:\tIf something likes the cat and the cat visits the cow then the cow is red.\nFOL:\tall x. ((Likes(x, Cat) & Visits(Cat, Cow)) -> Red(Cow))\nTEXT:\tIf something is rough and it likes the mouse then the mouse visits the cow.\nFOL:\tall x. ((Rough(x) & Likes(x, Mouse)) -> Visits(Mouse, Cow))\nTEXT:\tIf the cat visits the tiger and the tiger likes the cat then the cat visits the cow.\nFOL:\t((Visits(Cat, Tiger) & Likes(Tiger, Cat)) -> Visits(Cat, Cow))\nTEXT:\tIf something needs the tiger then it likes the cat.\nFOL:\tall x. (Needs(x, Tiger) -> Likes(x, Cat))\nTEXT:\tIf something visits the cow and the cow likes the mouse then the cow likes the tiger.\nFOL:\tall x. ((Visits(x, Cow) & Likes(Cow, Mouse)) -> Likes(Cow, Tiger))\nTEXT:\tIf something is red then it needs the tiger.\nFOL:\tall x. (Red(x) -> Needs(x, Tiger))\nTEXT:\tIf something likes the cow then it is blue.\nFOL:\tall x. (Likes(x, Cow) -> Blue(x))\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\n"], ["TEXT:\tBob is furry.\nFOL:\tFurry(Bob)\nTEXT:\tBob is young.\nFOL:\tYoung(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tErin is young.\nFOL:\tYoung(Erin)\nTEXT:\tFurry, smart things are big.\nFOL:\tall x. (Furry(x) & Smart(x) -> Big(x))\nTEXT:\tWhite, big things are green.\nFOL:\tall x. (White(x) & Big(x) -> Green(x))\nTEXT:\tIf something is white then it is furry.\nFOL:\tall x. (White(x) -> Furry(x))\nTEXT:\tIf something is nice and furry then it is smart.\nFOL:\tall x. (Nice(x) & Furry(x) -> Smart(x))\nTEXT:\tIf something is furry and green then it is white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tYoung, big things are white.\nFOL:\tall x. (Young(x) & Big(x) -> White(x))\nTEXT:\tIf Erin is young then Erin is furry.\nFOL:\tYoung(Erin) -> Furry(Erin)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\n"], ["TEXT:\tAnne is cold.\nFOL:\tCold(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tErin is cold.\nFOL:\tCold(Erin)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is cold.\nFOL:\tCold(Fiona)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tIf something is kind and round then it is quiet.\nFOL:\tall x. (Kind(x) & Round(x) -> Quiet(x))\nTEXT:\tIf something is white and round then it is kind.\nFOL:\tall x. (White(x) & Round(x) -> Kind(x))\nTEXT:\tIf Erin is cold then Erin is white.\nFOL:\tCold(Erin) -> White(Erin)\nTEXT:\tIf Dave is quiet then Dave is cold.\nFOL:\tQuiet(Dave) -> Cold(Dave)\nTEXT:\tIf something is round then it is smart.\nFOL:\tall x. (Round(x) -> Smart(x))\nTEXT:\tSmart things are white.\nFOL:\tall x. (Smart(x) -> White(x))\nTEXT:\tAll quiet things are furry.\nFOL:\tall x. (Quiet(x) -> Furry(x))\nTEXT:\tIf Anne is quiet then Anne is smart.\nFOL:\tQuiet(Anne) -> Smart(Anne)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\n"], ["TEXT:\tCharlie is not white.\nFOL:\t-White(Charlie)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tDave is white.\nFOL:\tWhite(Dave)\nTEXT:\tDave is young.\nFOL:\tYoung(Dave)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tIf someone is round then they are young.\nFOL:\tall x. (Round(x) -> Young(x))\nTEXT:\tAll smart people are round.\nFOL:\tall x. (Smart(x) -> Round(x))\nTEXT:\tFurry, green people are white.\nFOL:\tall x. (Furry(x) & Green(x) -> White(x))\nTEXT:\tIf someone is nice and white then they are furry.\nFOL:\tall x. (Nice(x) & White(x) -> Furry(x))\nTEXT:\tAll young people are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tIf someone is furry and young then they are nice.\nFOL:\tall x. (Furry(x) & Young(x) -> Nice(x))\nTEXT:\tIf someone is nice and not young then they are green.\nFOL:\tall x. (Nice(x) & -Young(x) -> Green(x))\nTEXT:\tNice people are green.\nFOL:\tall x. (Nice(x) -> Green(x))\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\n"], ["TEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is smart.\nFOL:\tSmart(Charlie)\nTEXT:\tDave is smart.\nFOL:\tSmart(Dave)\nTEXT:\tFiona is green.\nFOL:\tGreen(Fiona)\nTEXT:\tFiona is smart.\nFOL:\tSmart(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tHarry is red.\nFOL:\tRed(Harry)\nTEXT:\tIf Charlie is round and Charlie is big then Charlie is smart.\nFOL:\t(Round(Charlie) & Big(Charlie)) -> Smart(Charlie)\nTEXT:\tIf something is smart and not red then it is round.\nFOL:\tall x. (Smart(x) & -Red(x) -> Round(x))\nTEXT:\tAll red, young things are round.\nFOL:\tall x. (Red(x) & Young(x) -> Round(x))\nTEXT:\tBig things are young.\nFOL:\tall x. (Big(x) -> Young(x))\nTEXT:\tRed things are big.\nFOL:\tall x. (Red(x) -> Big(x))\nTEXT:\tIf something is red then it is smart.\nFOL:\tall x. (Red(x) -> Smart(x))\nTEXT:\tAll round, red things are cold.\nFOL:\tall x. (Round(x) & Red(x) -> Cold(x))\nTEXT:\tAll round, green things are cold.\nFOL:\tall x. (Round(x) & Green(x) -> Cold(x))\nTEXT:\tIf something is red and cold then it is green.\nFOL:\tall x. (Red(x) & Cold(x) -> Green(x))\nTEXT:\tHarry is not smart.\nFOL:\t-Smart(Harry)\n"], ["TEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is red.\nFOL:\tRed(BaldEagle)\nTEXT:\tThe bear eats the tiger.\nFOL:\tEats(Bear, Tiger)\nTEXT:\tThe bear is round.\nFOL:\tRound(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLikes(Bear, BaldEagle)\nTEXT:\tThe bear sees the lion.\nFOL:\tSees(Bear, Lion)\nTEXT:\tThe lion eats the tiger.\nFOL:\tEats(Lion, Tiger)\nTEXT:\tThe lion is cold.\nFOL:\tCold(Lion)\nTEXT:\tThe lion sees the tiger.\nFOL:\tSees(Lion, Tiger)\nTEXT:\tThe tiger is not nice.\nFOL:\t-Nice(Tiger)\nTEXT:\tThe tiger likes the bald eagle.\nFOL:\tLikes(Tiger, BaldEagle)\nTEXT:\tThe tiger sees the bald eagle.\nFOL:\tSees(Tiger, BaldEagle)\nTEXT:\tIf something is kind then it likes the bear.\nFOL:\tall x. (Kind(x) -> Likes(x, Bear))\nTEXT:\tIf something is nice then it likes the tiger.\nFOL:\tall x. (Nice(x) -> Likes(x, Tiger))\nTEXT:\tIf something eats the lion then it does not like the tiger.\nFOL:\tall x. (Eats(x, Lion) -> -Likes(x, Tiger))\nTEXT:\tIf the bald eagle likes the lion and the bald eagle sees the tiger then the lion is red.\nFOL:\t(Likes(BaldEagle, Lion) & Sees(BaldEagle, Tiger)) -> Red(Lion)\nTEXT:\tIf something eats the bald eagle then the bald eagle does not see the bear.\nFOL:\tall x. (Eats(x, BaldEagle) -> -Sees(BaldEagle, Bear))\nTEXT:\tIf something sees the tiger then the tiger likes the lion.\nFOL:\tall x. (Sees(x, Tiger) -> Likes(Tiger, Lion))\nTEXT:\tIf something eats the bear and it is round then it is nice.\nFOL:\tall x. (Eats(x, Bear) & Round(x) -> Nice(x))\nTEXT:\tIf something eats the tiger and it likes the bear then the bear is kind.\nFOL:\tall x. (Eats(x, Tiger) & Likes(x, Bear) -> Kind(Bear))\nTEXT:\tIf something likes the lion then the lion is kind.\nFOL:\tall x. (Likes(x, Lion) -> Kind(Lion))\nTEXT:\tThe bear is kind.\nFOL:\tKind(Bear)\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tBob is nice.\nFOL:\tNice(Bob)\nTEXT:\tBob is red.\nFOL:\tRed(Bob)\nTEXT:\tErin is nice.\nFOL:\tNice(Erin)\nTEXT:\tFiona is red.\nFOL:\tRed(Fiona)\nTEXT:\tHarry is nice.\nFOL:\tNice(Harry)\nTEXT:\tHarry is smart.\nFOL:\tSmart(Harry)\nTEXT:\tQuiet, round people are red.\nFOL:\tall x. (Quiet(x) & Round(x) -> Red(x))\nTEXT:\tIf Harry is cold then Harry is quiet.\nFOL:\tCold(Harry) -> Quiet(Harry)\nTEXT:\tAll red, round people are cold.\nFOL:\tall x. (Red(x) & Round(x) -> Cold(x))\nTEXT:\tFurry people are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is smart and nice then they are round.\nFOL:\tall x. (Smart(x) & Nice(x) -> Round(x))\nTEXT:\tCold people are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tIf someone is quiet then they are nice.\nFOL:\tall x. (Quiet(x) -> Nice(x))\nTEXT:\tAll red people are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tAll smart, furry people are nice.\nFOL:\tall x. (Smart(x) & Furry(x) -> Nice(x))\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\n"], ["TEXT:\tThe bear eats the cow.\nFOL:\tEats(Bear, Cow)\nTEXT:\tThe bear likes the lion.\nFOL:\tLikes(Bear, Lion)\nTEXT:\tThe bear likes the mouse.\nFOL:\tLikes(Bear, Mouse)\nTEXT:\tThe cow chases the bear.\nFOL:\tChases(Cow, Bear)\nTEXT:\tThe cow chases the mouse.\nFOL:\tChases(Cow, Mouse)\nTEXT:\tThe cow eats the bear.\nFOL:\tEats(Cow, Bear)\nTEXT:\tThe cow is nice.\nFOL:\tNice(Cow)\nTEXT:\tThe lion chases the cow.\nFOL:\tChases(Lion, Cow)\nTEXT:\tThe lion chases the mouse.\nFOL:\tChases(Lion, Mouse)\nTEXT:\tThe lion likes the bear.\nFOL:\tLikes(Lion, Bear)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse chases the lion.\nFOL:\tChases(Mouse, Lion)\nTEXT:\tIf someone is young then they are round.\nFOL:\tall x. (Young(x) -> Round(x))\nTEXT:\tIf someone eats the lion then they are young.\nFOL:\tall x. (Eats(x, Lion) -> Young(x))\nTEXT:\tIf someone eats the bear then they eat the lion.\nFOL:\tall x. (Eats(x, Bear) -> Eats(x, Lion))\nTEXT:\tIf someone is nice and they chase the lion then they like the bear.\nFOL:\tall x. (Nice(x) & Chases(x, Lion) -> Likes(x, Bear))\nTEXT:\tIf someone eats the lion then the lion eats the bear.\nFOL:\tall x. (Eats(x, Lion) -> Eats(Lion, Bear))\nTEXT:\tThe lion does not eat the lion.\nFOL:\t-Eats(Lion, Lion)\n"], ["TEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is kind.\nFOL:\tKind(Charlie)\nTEXT:\tDave is round.\nFOL:\tRound(Dave)\nTEXT:\tFiona is big.\nFOL:\tBig(Fiona)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tFiona is round.\nFOL:\tRound(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tIf someone is white then they are not big.\nFOL:\tall x. (White(x) -> -Big(x))\nTEXT:\tRound people are big.\nFOL:\tall x. (Round(x) -> Big(x))\nTEXT:\tKind people are not rough.\nFOL:\tall x. (Kind(x) -> -Rough(x))\nTEXT:\tIf someone is rough and big then they are round.\nFOL:\tall x. ((Rough(x) & Big(x)) -> Round(x))\nTEXT:\tBlue people are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf someone is cold then they are blue.\nFOL:\tall x. (Cold(x) -> Blue(x))\nTEXT:\tAll white people are blue.\nFOL:\tall x. (White(x) -> Blue(x))\nTEXT:\tBig people are cold.\nFOL:\tall x. (Big(x) -> Cold(x))\nTEXT:\tIf Charlie is blue and Charlie is cold then Charlie is white.\nFOL:\t((Blue(Charlie) & Cold(Charlie)) -> White(Charlie))\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\n"], ["TEXT:\tThe bald eagle is not blue.\nFOL:\t-Blue(BaldEagle)\nTEXT:\tThe bald eagle likes the dog.\nFOL:\tLikes(BaldEagle, Dog)\nTEXT:\tThe bald eagle needs the tiger.\nFOL:\tNeeds(BaldEagle, Tiger)\nTEXT:\tThe bald eagle does not see the dog.\nFOL:\t-Sees(BaldEagle, Dog)\nTEXT:\tThe bald eagle sees the tiger.\nFOL:\tSees(BaldEagle, Tiger)\nTEXT:\tThe dog is blue.\nFOL:\tBlue(Dog)\nTEXT:\tThe dog sees the tiger.\nFOL:\tSees(Dog, Tiger)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe rabbit is red.\nFOL:\tRed(Rabbit)\nTEXT:\tThe rabbit sees the dog.\nFOL:\tSees(Rabbit, Dog)\nTEXT:\tThe tiger needs the bald eagle.\nFOL:\tNeeds(Tiger, BaldEagle)\nTEXT:\tThe tiger needs the dog.\nFOL:\tNeeds(Tiger, Dog)\nTEXT:\tIf someone needs the bald eagle and the bald eagle sees the tiger then they are rough.\nFOL:\tall x. (Needs(x, BaldEagle) & Sees(BaldEagle, Tiger) -> Rough(x))\nTEXT:\tIf someone needs the dog and they like the dog then they need the bald eagle.\nFOL:\tall x. (Needs(x, Dog) & Likes(x, Dog) -> Needs(x, BaldEagle))\nTEXT:\tIf someone likes the bald eagle then the bald eagle needs the dog.\nFOL:\tall x. (Likes(x, BaldEagle) -> Needs(BaldEagle, Dog))\nTEXT:\tIf someone is rough and they like the dog then the dog needs the tiger.\nFOL:\tall x. (Rough(x) & Likes(x, Dog) -> Needs(Dog, Tiger))\nTEXT:\tIf someone likes the dog and the dog is blue then they see the tiger.\nFOL:\tall x. (Likes(x, Dog) & Blue(Dog) -> Sees(x, Tiger))\nTEXT:\tIf someone needs the tiger and they do not see the dog then the tiger needs the bald eagle.\nFOL:\tall x. (Needs(x, Tiger) & -Sees(x, Dog) -> Needs(Tiger, BaldEagle))\nTEXT:\tIf someone needs the bald eagle then they like the bald eagle.\nFOL:\tall x. (Needs(x, BaldEagle) -> Likes(x, BaldEagle))\nTEXT:\tThe tiger does not need the rabbit.\nFOL:\t-Needs(Tiger, Rabbit)\n"], ["TEXT:\tThe bald eagle is nice.\nFOL:\tNice(BaldEagle)\nTEXT:\tThe bald eagle does not see the bear.\nFOL:\t-See(BaldEagle, Bear)\nTEXT:\tThe bald eagle sees the cat.\nFOL:\tSee(BaldEagle, Cat)\nTEXT:\tThe bear does not eat the cat.\nFOL:\t-Eat(Bear, Cat)\nTEXT:\tThe bear is nice.\nFOL:\tNice(Bear)\nTEXT:\tThe bear is red.\nFOL:\tRed(Bear)\nTEXT:\tThe bear likes the bald eagle.\nFOL:\tLike(Bear, BaldEagle)\nTEXT:\tThe cat eats the lion.\nFOL:\tEat(Cat, Lion)\nTEXT:\tThe cat sees the bear.\nFOL:\tSee(Cat, Bear)\nTEXT:\tThe lion eats the cat.\nFOL:\tEat(Lion, Cat)\nTEXT:\tIf someone sees the cat and they eat the cat then they are not red.\nFOL:\tall x. ((See(x, Cat) & Eat(x, Cat)) -> -Red(x))\nTEXT:\tIf someone sees the bald eagle and the bald eagle is nice then the bald eagle does not see the lion.\nFOL:\tall x. ((See(x, BaldEagle) & Nice(BaldEagle)) -> -See(BaldEagle, Lion))\nTEXT:\tIf someone eats the bald eagle and they are green then the bald eagle sees the bear.\nFOL:\tall x. ((Eat(x, BaldEagle) & Green(x)) -> See(BaldEagle, Bear))\nTEXT:\tIf someone sees the cat then they are green.\nFOL:\tall x. (See(x, Cat) -> Green(x))\nTEXT:\tIf the cat eats the bear and the bear is nice then the bear is not young.\nFOL:\t((Eat(Cat, Bear) & Nice(Bear)) -> -Young(Bear))\nTEXT:\tIf someone sees the bear and they are green then the bear eats the lion.\nFOL:\tall x. ((See(x, Bear) & Green(x)) -> Eat(Bear, Lion))\nTEXT:\tIf someone eats the lion then they see the cat.\nFOL:\tall x. (Eat(x, Lion) -> See(x, Cat))\nTEXT:\tThe bear eats the lion.\nFOL:\tEat(Bear, Lion)\n"], ["TEXT:\tThe cat eats the mouse.\nFOL:\tEats(Cat, Mouse)\nTEXT:\tThe cat likes the tiger.\nFOL:\tLikes(Cat, Tiger)\nTEXT:\tThe cow eats the tiger.\nFOL:\tEats(Cow, Tiger)\nTEXT:\tThe cow likes the cat.\nFOL:\tLikes(Cow, Cat)\nTEXT:\tThe mouse chases the cat.\nFOL:\tChases(Mouse, Cat)\nTEXT:\tThe mouse chases the cow.\nFOL:\tChases(Mouse, Cow)\nTEXT:\tThe mouse eats the tiger.\nFOL:\tEats(Mouse, Tiger)\nTEXT:\tThe mouse is green.\nFOL:\tGreen(Mouse)\nTEXT:\tThe mouse is round.\nFOL:\tRound(Mouse)\nTEXT:\tThe tiger chases the cat.\nFOL:\tChases(Tiger, Cat)\nTEXT:\tThe tiger eats the cow.\nFOL:\tEats(Tiger, Cow)\nTEXT:\tThe tiger likes the mouse.\nFOL:\tLikes(Tiger, Mouse)\nTEXT:\tIf someone chases the cow and they chase the mouse then the mouse is blue.\nFOL:\tall x. ((Chases(x, Cow) & Chases(x, Mouse)) -> Blue(Mouse))\nTEXT:\tIf someone eats the cat then they are nice.\nFOL:\tall x. (Eats(x, Cat) -> Nice(x))\nTEXT:\tIf the cat eats the mouse then the mouse likes the cow.\nFOL:\t(Eats(Cat, Mouse) -> Likes(Mouse, Cow))\nTEXT:\tIf someone chases the mouse and they are round then they are big.\nFOL:\tall x. ((Chases(x, Mouse) & Round(x)) -> Big(x))\nTEXT:\tIf someone chases the tiger and the tiger chases the cat then the tiger is round.\nFOL:\tall x. ((Chases(x, Tiger) & Chases(Tiger, Cat)) -> Round(Tiger))\nTEXT:\tIf someone eats the tiger and they like the cat then the cat likes the cow.\nFOL:\tall x. ((Eats(x, Tiger) & Likes(x, Cat)) -> Likes(Cat, Cow))\nTEXT:\tIf the mouse likes the cow and the mouse chases the cow then the cow eats the cat.\nFOL:\t((Likes(Mouse, Cow) & Chases(Mouse, Cow)) -> Eats(Cow, Cat))\nTEXT:\tIf someone eats the cow and they eat the cat then they chase the tiger.\nFOL:\tall x. ((Eats(x, Cow) & Eats(x, Cat)) -> Chases(x, Tiger))\nTEXT:\tIf someone eats the tiger and they eat the cat then the tiger eats the cat.\nFOL:\tall x. ((Eats(x, Tiger) & Eats(x, Cat)) -> Eats(Tiger, Cat))\nTEXT:\tThe cow is big.\nFOL:\tBig(Cow)\n"], ["TEXT:\tDave is blue.\nFOL:\tBlue(Dave)\nTEXT:\tDave is furry.\nFOL:\tFurry(Dave)\nTEXT:\tFiona is blue.\nFOL:\tBlue(Fiona)\nTEXT:\tGary is not white.\nFOL:\t-White(Gary)\nTEXT:\tHarry is furry.\nFOL:\tFurry(Harry)\nTEXT:\tHarry is green.\nFOL:\tGreen(Harry)\nTEXT:\tHarry is white.\nFOL:\tWhite(Harry)\nTEXT:\tAll green things are smart.\nFOL:\tall x. (Green(x) -> Smart(x))\nTEXT:\tIf something is blue and furry then it is green.\nFOL:\tall x. ((Blue(x) & Furry(x)) -> Green(x))\nTEXT:\tBlue things are kind.\nFOL:\tall x. (Blue(x) -> Kind(x))\nTEXT:\tIf Fiona is kind then Fiona is furry.\nFOL:\t(Kind(Fiona) -> Furry(Fiona))\nTEXT:\tAll kind, furry things are blue.\nFOL:\tall x. ((Kind(x) & Furry(x)) -> Blue(x))\nTEXT:\tIf something is kind then it is white.\nFOL:\tall x. (Kind(x) -> White(x))\nTEXT:\tIf something is smart then it is big.\nFOL:\tall x. (Smart(x) -> Big(x))\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\n"], ["TEXT:\tThe cat eats the rabbit.\nFOL:\tEats(Cat, Rabbit)\nTEXT:\tThe cat is round.\nFOL:\tRound(Cat)\nTEXT:\tThe cat likes the dog.\nFOL:\tLikes(Cat, Dog)\nTEXT:\tThe cat needs the dog.\nFOL:\tNeeds(Cat, Dog)\nTEXT:\tThe dog eats the cat.\nFOL:\tEats(Dog, Cat)\nTEXT:\tThe dog is big.\nFOL:\tBig(Dog)\nTEXT:\tThe dog likes the cat.\nFOL:\tLikes(Dog, Cat)\nTEXT:\tThe dog likes the rabbit.\nFOL:\tLikes(Dog, Rabbit)\nTEXT:\tThe dog needs the mouse.\nFOL:\tNeeds(Dog, Mouse)\nTEXT:\tThe mouse eats the cat.\nFOL:\tEats(Mouse, Cat)\nTEXT:\tThe mouse needs the cat.\nFOL:\tNeeds(Mouse, Cat)\nTEXT:\tThe rabbit eats the cat.\nFOL:\tEats(Rabbit, Cat)\nTEXT:\tThe rabbit is big.\nFOL:\tBig(Rabbit)\nTEXT:\tThe rabbit is rough.\nFOL:\tRough(Rabbit)\nTEXT:\tThe rabbit needs the cat.\nFOL:\tNeeds(Rabbit, Cat)\nTEXT:\tThe rabbit needs the dog.\nFOL:\tNeeds(Rabbit, Dog)\nTEXT:\tIf something likes the dog then the dog eats the cat.\nFOL:\tall x. (Likes(x, Dog) -> Eats(Dog, Cat))\nTEXT:\tIf the dog is rough then the dog eats the cat.\nFOL:\tRough(Dog) -> Eats(Dog, Cat)\nTEXT:\tIf something eats the cat and the cat likes the rabbit then it is big.\nFOL:\tall x. ((Eats(x, Cat) & Likes(Cat, Rabbit)) -> Big(x))\nTEXT:\tIf something is kind then it likes the cat.\nFOL:\tall x. (Kind(x) -> Likes(x, Cat))\nTEXT:\tIf something likes the rabbit and the rabbit eats the cat then the cat is big.\nFOL:\tall x. ((Likes(x, Rabbit) & Eats(Rabbit, Cat)) -> Big(Cat))\nTEXT:\tIf the rabbit is big then the rabbit eats the cat.\nFOL:\tBig(Rabbit) -> Eats(Rabbit, Cat)\nTEXT:\tIf something needs the cat then it is round.\nFOL:\tall x. (Needs(x, Cat) -> Round(x))\nTEXT:\tIf something is big then it likes the rabbit.\nFOL:\tall x. (Big(x) -> Likes(x, Rabbit))\nTEXT:\tIf something likes the rabbit then it is rough.\nFOL:\tall x. (Likes(x, Rabbit) -> Rough(x))\nTEXT:\tThe mouse likes the cat.\nFOL:\tLikes(Mouse, Cat)\n"], ["TEXT:\tAnne is kind.\nFOL:\tKind(Anne)\nTEXT:\tAnne is white.\nFOL:\tWhite(Anne)\nTEXT:\tErin is kind.\nFOL:\tKind(Erin)\nTEXT:\tFiona is quiet.\nFOL:\tQuiet(Fiona)\nTEXT:\tFiona is not white.\nFOL:\t-White(Fiona)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tGary is furry.\nFOL:\tFurry(Gary)\nTEXT:\tIf something is kind then it is not green.\nFOL:\tall x. (Kind(x) -> -Green(x))\nTEXT:\tAll cold things are not green.\nFOL:\tall x. (Cold(x) -> -Green(x))\nTEXT:\tAll quiet things are young.\nFOL:\tall x. (Quiet(x) -> Young(x))\nTEXT:\tAll cold things are quiet.\nFOL:\tall x. (Cold(x) -> Quiet(x))\nTEXT:\tKind things are cold.\nFOL:\tall x. (Kind(x) -> Cold(x))\nTEXT:\tIf something is white and not young then it is furry.\nFOL:\tall x. ((White(x) & -Young(x)) -> Furry(x))\nTEXT:\tAll young things are furry.\nFOL:\tall x. (Young(x) -> Furry(x))\nTEXT:\tFurry, kind things are white.\nFOL:\tall x. ((Furry(x) & Kind(x)) -> White(x))\nTEXT:\tAnne is not young.\nFOL:\t-Young(Anne)\n"], ["TEXT:\tThe bear chases the tiger.\nFOL:\tChases(Bear, Tiger)\nTEXT:\tThe dog chases the bear.\nFOL:\tChases(Dog, Bear)\nTEXT:\tThe dog needs the bear.\nFOL:\tNeeds(Dog, Bear)\nTEXT:\tThe mouse chases the tiger.\nFOL:\tChases(Mouse, Tiger)\nTEXT:\tThe mouse is red.\nFOL:\tRed(Mouse)\nTEXT:\tThe mouse needs the tiger.\nFOL:\tNeeds(Mouse, Tiger)\nTEXT:\tThe tiger visits the dog.\nFOL:\tVisits(Tiger, Dog)\nTEXT:\tIf the dog is cold and the dog visits the mouse then the dog needs the tiger.\nFOL:\tall x. (Cold(Dog) & Visits(Dog, Mouse) -> Needs(Dog, Tiger))\nTEXT:\tIf something chases the dog then the dog is cold.\nFOL:\tall x. (Chases(x, Dog) -> Cold(Dog))\nTEXT:\tAll cold things are red.\nFOL:\tall x. (Cold(x) -> Red(x))\nTEXT:\tRed things are kind.\nFOL:\tall x. (Red(x) -> Kind(x))\nTEXT:\tIf something chases the tiger and it is kind then it visits the tiger.\nFOL:\tall x. (Chases(x, Tiger) & Kind(x) -> Visits(x, Tiger))\nTEXT:\tIf something is cold and it visits the tiger then the tiger is red.\nFOL:\tall x. (Cold(x) & Visits(x, Tiger) -> Red(Tiger))\nTEXT:\tIf the mouse is kind then the mouse is rough.\nFOL:\t(Kind(Mouse) -> Rough(Mouse))\nTEXT:\tIf something visits the dog and the dog chases the bear then the bear is cold.\nFOL:\tall x. (Visits(x, Dog) & Chases(Dog, Bear) -> Cold(Bear))\nTEXT:\tIf something is rough then it needs the mouse.\nFOL:\tall x. (Rough(x) -> Needs(x, Mouse))\nTEXT:\tThe tiger is red.\nFOL:\tRed(Tiger)\n"], ["TEXT:\tBob is cold.\nFOL:\tCold(Bob)\nTEXT:\tCharlie is big.\nFOL:\tBig(Charlie)\nTEXT:\tCharlie is blue.\nFOL:\tBlue(Charlie)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is furry.\nFOL:\tFurry(Charlie)\nTEXT:\tCharlie is white.\nFOL:\tWhite(Charlie)\nTEXT:\tGary is big.\nFOL:\tBig(Gary)\nTEXT:\tGary is cold.\nFOL:\tCold(Gary)\nTEXT:\tHarry is big.\nFOL:\tBig(Harry)\nTEXT:\tHarry is cold.\nFOL:\tCold(Harry)\nTEXT:\tHarry is quiet.\nFOL:\tQuiet(Harry)\nTEXT:\tFurry, blue people are big.\nFOL:\tall x. (Furry(x) & Blue(x) -> Big(x))\nTEXT:\tAll big, cold people are green.\nFOL:\tall x. (Big(x) & Cold(x) -> Green(x))\nTEXT:\tIf someone is quiet and furry then they are blue.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Blue(x))\nTEXT:\tFurry, quiet people are white.\nFOL:\tall x. (Furry(x) & Quiet(x) -> White(x))\nTEXT:\tIf someone is quiet and furry then they are green.\nFOL:\tall x. (Quiet(x) & Furry(x) -> Green(x))\nTEXT:\tIf Gary is white then Gary is quiet.\nFOL:\t(White(Gary) -> Quiet(Gary))\nTEXT:\tIf Bob is green and Bob is white then Bob is furry.\nFOL:\t((Green(Bob) & White(Bob)) -> Furry(Bob))\nTEXT:\tIf someone is furry then they are white.\nFOL:\tall x. (Furry(x) -> White(x))\nTEXT:\tAll green people are furry.\nFOL:\tall x. (Green(x) -> Furry(x))\nTEXT:\tBob is white.\nFOL:\tWhite(Bob)\n"], ["TEXT:\tBob is kind.\nFOL:\tKind(Bob)\nTEXT:\tCharlie is cold.\nFOL:\tCold(Charlie)\nTEXT:\tCharlie is quiet.\nFOL:\tQuiet(Charlie)\nTEXT:\tErin is red.\nFOL:\tRed(Erin)\nTEXT:\tFiona is furry.\nFOL:\tFurry(Fiona)\nTEXT:\tFiona is not kind.\nFOL:\t-Kind(Fiona)\nTEXT:\tFiona is young.\nFOL:\tYoung(Fiona)\nTEXT:\tIf someone is furry then they are smart.\nFOL:\tall x. (Furry(x) -> Smart(x))\nTEXT:\tIf someone is young then they are quiet.\nFOL:\tall x. (Young(x) -> Quiet(x))\nTEXT:\tIf someone is red then they are furry.\nFOL:\tall x. (Red(x) -> Furry(x))\nTEXT:\tIf Fiona is red then Fiona is smart.\nFOL:\t(Red(Fiona) -> Smart(Fiona))\nTEXT:\tIf Erin is red and Erin is cold then Erin is not young.\nFOL:\t(Red(Erin) & Cold(Erin) -> -Young(Erin))\nTEXT:\tIf Bob is cold then Bob is smart.\nFOL:\t(Cold(Bob) -> Smart(Bob))\nTEXT:\tIf someone is smart then they are cold.\nFOL:\tall x. (Smart(x) -> Cold(x))\nTEXT:\tIf Erin is red and Erin is not young then Erin is not kind.\nFOL:\t(Red(Erin) & -Young(Erin) -> -Kind(Erin))\nTEXT:\tIf Erin is red and Erin is not furry then Erin is quiet.\nFOL:\t(Red(Erin) & -Furry(Erin) -> Quiet(Erin))\nTEXT:\tErin is not young.\nFOL:\t-Young(Erin)\n"], ["TEXT:\tThe bald eagle chases the cow.\nFOL:\tChases(BaldEagle, Cow)\nTEXT:\tThe bald eagle is kind.\nFOL:\tKind(BaldEagle)\nTEXT:\tThe bald eagle is rough.\nFOL:\tRough(BaldEagle)\nTEXT:\tThe bald eagle needs the rabbit.\nFOL:\tNeeds(BaldEagle, Rabbit)\nTEXT:\tThe cow chases the rabbit.\nFOL:\tChases(Cow, Rabbit)\nTEXT:\tThe cow is cold.\nFOL:\tCold(Cow)\nTEXT:\tThe cow is green.\nFOL:\tGreen(Cow)\nTEXT:\tThe cow is red.\nFOL:\tRed(Cow)\nTEXT:\tThe rabbit does not chase the bald eagle.\nFOL:\t-Chases(Rabbit, BaldEagle)\nTEXT:\tThe rabbit chases the cow.\nFOL:\tChases(Rabbit, Cow)\nTEXT:\tThe rabbit does not eat the bald eagle.\nFOL:\t-Eats(Rabbit, BaldEagle)\nTEXT:\tThe rabbit eats the cow.\nFOL:\tEats(Rabbit, Cow)\nTEXT:\tThe rabbit is cold.\nFOL:\tCold(Rabbit)\nTEXT:\tThe rabbit is green.\nFOL:\tGreen(Rabbit)\nTEXT:\tThe squirrel eats the cow.\nFOL:\tEats(Squirrel, Cow)\nTEXT:\tThe squirrel does not eat the rabbit.\nFOL:\t-Eats(Squirrel, Rabbit)\nTEXT:\tIf something needs the bald eagle then the bald eagle chases the rabbit.\nFOL:\tall x. (Needs(x, BaldEagle) -> Chases(BaldEagle, Rabbit))\nTEXT:\tIf the squirrel is rough and the squirrel is not kind then the squirrel is green.\nFOL:\t(Rough(Squirrel) & -Kind(Squirrel)) -> Green(Squirrel)\nTEXT:\tIf something chases the bald eagle then it needs the squirrel.\nFOL:\tall x. (Chases(x, BaldEagle) -> Needs(x, Squirrel))\nTEXT:\tIf something needs the rabbit then it chases the bald eagle.\nFOL:\tall x. (Needs(x, Rabbit) -> Chases(x, BaldEagle))\nTEXT:\tIf something chases the cow then the cow eats the bald eagle.\nFOL:\tall x. (Chases(x, Cow) -> Eats(Cow, BaldEagle))\nTEXT:\tIf something chases the bald eagle and it does not need the bald eagle then it is red.\nFOL:\tall x. ((Chases(x, BaldEagle) & -Needs(x, BaldEagle)) -> Red(x))\nTEXT:\tIf something needs the squirrel then the squirrel needs the rabbit.\nFOL:\tall x. (Needs(x, Squirrel) -> Needs(Squirrel, Rabbit))\nTEXT:\tThe cow does not chase the bald eagle.\nFOL:\t-Chases(Cow, BaldEagle)\n"]]